[["index.html", "Incorporating Spatial Analysis into Agricultural Field Experiments. Section 1 Preface 1.1 Tutorial goal 1.2 Prerequisites 1.3 R Requirements 1.4 SAS Requirements 1.5 Contributors 1.6 License", " Incorporating Spatial Analysis into Agricultural Field Experiments. Julia Piaskowski1 William Price2 August 17, 2021 Section 1 Preface Vincent Van Gogh, A Road in Auvers After the Rain 1.1 Tutorial goal To help people conducting planned agricultural field trials understand and incorporate spatial variation routinely into analysis of field trials. Current educational resources are focused largely on geospatial applications that typically require a a moderate to deep understanding of mapping tools and spatial analytical techniques. Furthermore, there is not a comprehensive resources for spatial analytical techniques for field experiments that is also freely available. This tutorial is intended to fill that gap. 1.2 Prerequisites In order to run the scripts in this demonstration, you will to download R, available free through the Comprehensive R Archive Network (CRAN). While this is sufficient for running R scripts, You may also find it hepful to use RStudio, which provides a nice graphical user interface for R. RStudio can be downloaded here. If you already have R installed, please make sure you have version 3.5.0 or newer. This demonstration is not intended to provide instructions on general R usage. However, There are numerous web resources for learning the Basics of R. Software carpentry offers several lesson plans covering the foundation of R. 1.3 R Requirements This tutorial was built using R version 4.1 (Camp Pontanezen). R session information is provided in 8. R Packages used in this tutorial Package Usage in This Tutorial dplyr, tidyr, purrr basic data manipulation ggplot, desplot plotting agridat contains demonstration data sets sp, sf standard manipulation of spatial objects spdep spatial dependence functions gstat empirical variogram estimation nlme mixed model analysis emmeans extracts treatments means spANOVA spatial lag models for field trials SpATS spatial splines for field trials inla Bayesian modeling with AR1xAR1 estimation All packages aside from [inla]((https://www.r-inla.org) are available on CRAN. Download instructions for inla can be found here. 1.4 SAS Requirements In order to run the SAS portion of this tutorial, a valid copy of SAS Base and Stat products and a current SAS license are required. This tutorial was built using SAS 9.4 (TS1M5). Although older versions of SAS may also work, we have not evaluated this. Users can also consider downloading and using a free version of SAS Studio. The SAS scripts in this tutorial have not been tested on SAS Studio. SAS procedures used in this tutorial Procedure Usage in This Tutorial FORMAT, DATA, PRINT basic data input, manipulation, and display SORT, RANK sort and rank estimated means SGPLOT plotting MIXED, GLIMMIX mixed model analysis VARIOGRAM empirical variogram estimation 1.5 Contributors Julia Piaskowski wrote the R sections and William Price wrote the SAS portions of this tutorial. This book was written in bookdown. 1.6 License Incorporating Spatial Analysis into Agricultural Field Experiments by Julia Piaskowski and William Price is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License University of Idaho, jpiaskowski@uidaho.edu University of Idaho, bprice@uidaho.edu "],["intro.html", "Section 2 Introduction 2.1 Why care about spatial variation? 2.2 Diagnosing spatial auto-correlation", " Section 2 Introduction 2.1 Why care about spatial variation? The goal of variety testing programs is to provide the agricultural industry reliable information about regional crop variety performance. Crop variety trials employ common experimental designs such as randomized complete block design to account for environmental heterogeneity. However, those techniques are quite often inadequate to fully account for spatial heterogeneity that arises due to field position, soil conditions, disease, wildlife impacts and more. # need to insert image As a result, the assumption of ANOVA are violated, invalidating the analysis, and variety estimates themselves are incorrect. Incorporating spatial correlation between experimental plots can improve the overall accuracy and precision of these estimates. 2.2 Diagnosing spatial auto-correlation Spatial correlation is similarity of plots that are close to one another. That correlation is expected to decline with distance. This is different from experiment-wide gradients, such as a salinity gradient or position on a slope. 2.2.1 Morans I Morans I, sometimes called Global Morans I is similar like a correlation coefficient. It is a test for correlation between units (plots in our case). \\[ I = \\frac{N}{W}\\frac{\\sum_i \\sum_j w_{ij} (x_i - \\bar{x})(x_j - \\bar{x})}{\\sum_i(x_i - \\bar{x})^2} \\qquad i \\neq j\\] Where N is total number of spatial locations indexed by \\(i\\) and \\(j\\), x is the variable of interest, \\(w_{ij}\\) are a spatial weights between each \\(i\\) and \\(j\\), and W is the sum of all weights. The expected values of Morans I is \\(-1/(N-1)\\). Values greater than that indicate positive spatial correlation (areas close to each other are similar), while values less than the expected Morans I indicate dissimilarity as spatial distance between points decreases. There are several options for defining adjacent neighbors and how to weight each neighbors influence. The two common configurations for defining neighbors are the rook and queen configurations. These are exactly what their chess analogy suggest: rook defines neighbors in an row/column fashion, while queen defines neighbors in a row/column configuration an also neighbors located diagonally at a 45 degree angle from the row/column neighbors. Determining this can be somewhat complicated when working with irregularly-placed data (e.g. county seats), but is quite unambiguous for lattice data common in planned field experiments: Another test for diagnosing spatial correlation is Gearys C: \\[ I = \\frac{(N -1)}{2W}\\frac{\\sum_i \\sum_j w_{ij} (x_i - x_j)^2}{\\sum_i(x_i - \\bar{x})^2} \\qquad i \\neq j\\] These terms have the same meaning in Morans I. The expected value of Gearys C is 1. Values higher than 1 indicate positive spatial correlation and less than 1 indicate negative spatial correlation. 2.2.2 Empirical variogram &amp; semivariance An empirical variogram is a visual tool for understanding how error terms are related to each other over spatial distance. It relies on semivariance (\\(\\gamma\\)), a statistic expressing variance as a function of pairwise distances between data points at points \\(i\\) and \\(j\\). \\[\\gamma(h) = \\frac{1}{2|N(h)|}\\sum_{N(h)}(x_i - x_j)^2\\] Semivariances are binned for distance intervals. The average values for semivariance and distance interval can be fit to correlated error models such a exponential, spherical, Gaussian and Mat√©rn. How to do this is explored further in 3 of this guide. Three important concepts of an empirical variogram are nugget, sill and range Example Empirical Variogram range = distance up to which is there is spatial correlation sill = uncorrelated variance of the variable of interest nugget = measurement error, or short-distance spatial variance and other unaccounted for variance 2 other concepts: partial sill = sill - nugget nugget effect = the nugget/sill ratio, interpreted opposite of \\(r^2\\) "],["background.html", "Section 3 Spatial Models 3.1 Correlated error models 3.2 Spatial Regression methods 3.3 Trend analysis", " Section 3 Spatial Models This section contains some of the background behind why spatial models are used and how they work. Understanding this section is not essential, but it is extremely helpful. This section relies on information introduced in 2, so please make sure you have read that section if you are new to empirical variograms and spatial statistics. General linear statistical models are commonly modeled as thus: \\[Y_i = \\beta_0 + X_i\\beta_1 + \\epsilon_i\\] \\(\\beta_1\\) is a slope describing the relationship between a continuous variable and the dependent variable, \\(Y_i\\). If \\(X_i\\) is a categorical variable, such as a crop variety, then there will be \\(p-1\\) slopes estimated, where p is the number of unique treatments levels in \\(X\\). The error terms, \\(\\epsilon_i\\) are assumed normally distributed with a mean of zero and a variance of \\(\\sigma^2\\) : \\[e_i ~\\sim N(0, \\sigma^2)\\] The error terms, or residuals, are assumed to be identically and independently distributed (sometimes abbreviated iid). This implies a constant variance of the error terms and zero covariance between residuals. If N = 3, the expanded model looks like this: \\[\\left[ {\\begin{array}{ccc} Y_1\\\\ Y_2\\\\ Y_3 \\end{array} } \\right] = \\beta_0 + \\left[ {\\begin{array}{ccc} X_1\\\\ X_2\\\\ X_3 \\end{array} } \\right] \\beta_1 + \\left[ {\\begin{array}{ccc} \\epsilon_1\\\\ \\epsilon_2\\\\ \\epsilon_3 \\end{array} } \\right] \\] \\[e_i ~\\sim N \\Bigg( 0, \\left[ {\\begin{array}{ccc} \\sigma^2 &amp; 0 &amp; 0 \\\\ 0 &amp; \\sigma^2 &amp; 0\\\\ 0 &amp; 0 &amp; \\sigma^2\\end{array} } \\right] \\Bigg) \\] If spatial variation is present, the off-diagonals of the variance-covariance matrix are not zero - hence the error terms are not independently distributed. As a result, hypotheses test and parameter estimates from uncorrected linear models will provide erroneous results. 3.1 Correlated error models 3.1.1 Distance-based correlation error models There are mathematical tools for modelling how error terms are correlated with each other based on pairwise physical distance between observations. These models can be used to weight observations. Often, the data are assumed to be isotropic, where distance but not direction impacts the spatial error correlation. There are several methods for estimating the semivariance as a direct function of distance. 3.1.1.1 Exponential \\[ \\gamma (h)\\left\\{ {\\begin{array}{cc} 0 &amp; h = 0\\\\ C_0+C_1 \\left [ 1-e^{-(\\frac{h}{r})} \\right] &amp; h &gt; 0 \\end{array} } \\right. \\] where \\[ C_0 = nugget \\\\ C_1 = partial \\: sill \\\\ r = range\\] Figure 3.1: Exponential Model \\(3r = r_p\\) is the practical range, which is 95% of the true value for \\(C_1\\). 3.1.1.2 Gaussian (a squared version of the exponential model) \\[ \\gamma (h)\\left\\{ {\\begin{array}{cc} 0 &amp; h = 0\\\\ C_0+C_1 \\left [ 1-e^{-(\\frac{h}{r})^2} \\right] &amp; h &gt; 0 \\end{array} } \\right. \\] where \\[ C_0 = nugget \\\\ C_1 = partial \\: sill \\\\ r = range\\] Figure 3.2: Gaussian Model \\(\\sqrt 3r = r_p\\) is the practical range, which is 95% of the true value for \\(C_1\\). 3.1.1.3 Spherical \\[ \\gamma (h) = \\left\\{ {\\begin{array}{cc} 0 &amp; h = 0\\\\ C_0+C_1 \\left[ \\frac{3h}{2r}-0.5\\bigg( \\frac{h}{r}\\bigg)^3 \\right] &amp; 0 &lt;h \\leq r \\\\ C_0 + C_1 &amp; h &gt; r \\end{array} } \\right. \\] where \\[ C_0 = nugget \\\\ C_1 = partial \\: sill \\\\ r = range\\] Figure 3.3: Spherical Model 3.1.1.4 Other correlated error distance models There are many more models - Mat√©rn, Cauchy, Logistic - that may describe spatial correlation in a data set. There are two addition models that have no range or sill, the linear model and power model. If your data fits these, consider doing a trend analysis. 3.1.1.5 Linear \\[ \\gamma (h)=\\left\\{ {\\begin{array}{cc} 0 &amp; h = 0\\\\ C_0+C_1h &amp; h &gt; 0 \\end{array} } \\right. \\] where \\[ C_0 = nugget \\\\ C_1 = slope \\] Figure 3.4: Linear Error Model There is no sill or range in the linear model, so the variance will continue to increase as a function of distance. 3.1.1.6 Power \\[ \\gamma (h)=\\left\\{ {\\begin{array}{cc} 0 &amp; h = 0\\\\ C_0+C_1h^\\lambda &amp; h &gt; 0 \\end{array} } \\right. \\] where \\[ 0 \\leq \\lambda &lt;\\leq 2 \\\\ C_0 = nugget \\\\ C_1 = scaling \\: factor \\] Figure 3.5: Power Model When \\(\\lambda = 1\\), that is equivalent to the linear model. Example above is when \\(\\lambda = 0.5\\) (i.e. a square-root transformation) and \\(C_1 = 1\\). There is also no sill or range in the power model. 3.1.1.7 Mat√©rn \\[\\gamma(h) = c_0 + c_1 \\bigg( 1- \\frac{1}{2^{\\kappa -1}\\Gamma(\\kappa)} \\Big( \\frac{h}{\\alpha} \\Big) ^{\\kappa} K_\\kappa \\Big( \\frac{h}{\\alpha} \\Big) \\bigg)\\] Where \\[ C_0 = nugget \\\\ C_1 = partial \\: scale \\\\ \\alpha = smoothing \\: factor \\\\ \\kappa = covariance \\: parameter \\] \\(\\Gamma(\\kappa)\\) is the gamma function: \\[\\Gamma(\\kappa) = (\\kappa -1)!\\] and \\(\\kappa(\\alpha)\\) is a modified bessel function: \\[ K_\\kappa(t) = \\frac{\\Gamma(\\alpha)}{2} \\big( \\frac{t}{2} \\big) ^{-\\kappa}\\] 3.1.2 Correlated error model for gridded data Planned field experiments often have the advantage of being arranged in regular grid pattern that can be adequately described using Euclidean space. This simplifies aspects of understanding how error terms are related by distance since the data occur in evenly spaced increments. Furthermore, in many agricultural trials, there may be no interest in spatial interpolation between units. Some of the following models work with irregularly-spaced data, but the models below are simplified forms when the experimental units are arranged in regular grid. For example, imagine an experiment consisting of 8 plots (plot = the experiment units) arranged in 2 rows, each with 4 ranges with this layout: The statistical model for that experiment: \\[ \\left[ {\\begin{array} \\ Y_1 \\\\ Y_2 \\\\ \\vdots \\\\ Y_n \\end{array} } \\right] = \\beta_0 + \\left[ {\\begin{array} \\ X_1 \\\\ X_2 \\\\ \\vdots \\\\ X_n \\end{array} } \\right] \\beta_1 + \\left[ {\\begin{array} \\ \\epsilon_1 \\\\ \\epsilon_2 \\\\ \\vdots \\\\ \\epsilon_n \\end{array} } \\right] \\] \\(X\\beta\\) refer to independent variable effects. This same model is also often presented in an abbreviated matrix form: \\[ \\mathbf{Y = X\\beta + \\epsilon}\\] 3.1.2.1 First order auto-regressive model (AR1) This assumes that variance can be modelled as exponential function based on unit distance (e.g. row or range), either in a single direction or anistropic. The AR1 structure across 2 rows is modeled as thus: \\[\\mathbf { V_{AR(1)row}} = \\sigma^2 \\left[ {\\begin{array}{cc} 1 &amp; \\rho \\\\ \\rho &amp; 1 \\end{array} } \\right] \\otimes \\mathbf{I_4} \\] This covariance model describes the correlation of observations in the row direction only. And similarly the AR1 structure across 4 ranges is modeled as thus: \\[ \\mathbf {V_{AR(1)range}} = \\sigma^2 \\mathbf{I_4} \\otimes \\left[ {\\begin{array}{cccc} 1 &amp; \\rho &amp; \\rho^2 &amp; \\rho^3 \\\\ \\rho &amp; 1 &amp; \\rho &amp; \\rho^2 \\\\ \\rho^2 &amp; \\rho &amp; 1 &amp; \\rho \\\\ \\rho^3 &amp; \\rho^2 &amp; \\rho &amp; 1 \\end{array} } \\right] \\] This covariance model describes the correlation of observations in the range direction only. In combined AR1xAR1 model, the parameter, \\(\\rho\\) may need to estimated separated across the row and column directions depending on the shape of the plots and site-specific field variation. Very rectangular plots are likely to require a separate estimate of the \\(\\rho\\) parameter for each direction. $$ = ^2 $$ Note: \\(\\rho_1\\) and \\(\\rho_2\\) are the parameter estimate for \\(V_{AR1(1) row}\\) and \\(V_{AR(1)range}\\), respectively. Please note that these error models are for modelling localised variation based on physical proximity. It is assumed that eventually a distance in the experiment can be reached in which 2 observations can be treated independent. If there are spatial trends that extend along the entire scope of an experiment (for instance, due to position on a slope), then an additional trend analysis should be conducted. 3.2 Spatial Regression methods These approaches look use information from adjacent plots to adjust for spatial auto-correlation. 3.2.1 Spatial autoregressive (SAR) Sometimes called a lag model, the SAR model uses correlations with neighboring plots dependent variable to predict Y. The auto-regressive model explicitly models correlations between neighboring points. \\[\\mathbf{Y = \\rho W Y + X\\beta + \\epsilon} \\] While this may look strange, \\(\\mathbf{W}\\) is an \\(n\\) x \\(n\\) matrix weighting the neighbors with a diagonal of zero so the value at \\(i=j\\), that is \\(Y_{ijk}\\) itself, is not used on the right-hand side to predict \\(Y_{ijk}\\) on the left-hand side of the equation. The error terms are assumed iid. On Weights Setting weights of neighbors is dealt with in the next chapter 5. 3.3 Trend analysis 3.3.1 Row and column trends Experiment wide-trends should be modeled with directional trend models. These are comparatively simple models: \\[Y_{ijk} = \\beta_0 + X_{i1}\\beta_1 + Row_{j2}\\beta_2 + Range_{k3}\\beta_3 +\\epsilon_{ijk}\\] If the assumption of independent, normal, and identical errors are met, then this model will suffice. If spatial variation is still present, additional measures will need to be taken. 3.3.2 Splines There is a rich field of research on using localised splines to model field heterogeneity. These models are complex and hence not described here. "],["spatial-r.html", "Section 4 Identifying Spatial Variation: R 4.1 Load data 4.2 Test for spatial autocorrelation 4.3 Empirical variogram fitting", " Section 4 Identifying Spatial Variation: R 4.1 Load data This tutorial uses the Nebraska Interstate wheat trials, first published by Stroup et al in 1994 (Stroup, Baenziger, and Mulitze 1994) and reused extensively in field spatial variation studies. library(agridat); library(dplyr); library(tidyr) data(&quot;stroup.nin&quot;) Nin &lt;- stroup.nin %&gt;% mutate(col.width = col * 1.2, row.length = row * 4.3) %&gt;% mutate(name = case_when(is.na(as.character(rep)) ~ NA_character_, TRUE ~ as.character(gen))) %&gt;% arrange(col, row) Nin_na &lt;- filter(Nin, !is.na(rep)) 4.1.1 Examine data head(Nin) ## gen rep yield col row col.width row.length name ## 1 Lancer &lt;NA&gt; NA 1 1 1.2 4.3 &lt;NA&gt; ## 2 NE83407 R1 19.40 1 2 1.2 8.6 NE83407 ## 3 Buckskin R1 29.85 1 3 1.2 12.9 Buckskin ## 4 NE87612 R1 28.15 1 4 1.2 17.2 NE87612 ## 5 Vona R2 26.80 1 5 1.2 21.5 Vona ## 6 NE87512 R2 20.20 1 6 1.2 25.8 NE87512 This data set actually has no missing data  this is a balanced trial. However, there are empty fill plot with no data which creates some issues regarding NA handling. Plot raw yield data as it appeared in the field: library(ggplot2); library(desplot) ggplot(Nin, aes(x = row, y = col)) + geom_tile(aes(fill = yield), col = &quot;white&quot;) + geom_text(aes(label = name)) + geom_tileborder(aes(group = 1, grp = rep), lwd = 1.2) + scale_fill_gradient(low = &quot;white&quot;, high = &quot;blue&quot;) + scale_x_continuous(breaks = seq(1,max(Nin$row), 1)) + scale_y_continuous(breaks = 1:max(Nin$col)) + labs(x = &quot;row&quot;, y = &quot;column&quot;, title = &quot;field plot layout&quot;) + theme_classic() + theme(axis.text = element_text(size = 12), axis.title = element_text(size = 14), legend.title = element_text(size = 14), legend.text = element_text(size = 12)) Black lines delineate the blocks. Its also helpful to plot raw response data: par(mfrow=c(1,3)) boxplot(yield ~ rep, data = Nin, xlab = &quot;rep&quot;, ylab = &quot;yield (bu/acres)&quot;, col = &quot;red2&quot;, main = &quot;yield across blocks&quot;) boxplot(yield ~ row, data = Nin, xlab = &quot;row&quot;, ylab = &quot;yield (bu/acres)&quot;,col = &quot;dodgerblue2&quot;, main = &quot;yield across rows&quot;) boxplot(yield ~ col, data = Nin, col = &quot;gold&quot;, xlab = &quot;column&quot;, ylab = &quot;yield (bu/acres)&quot;,main = &quot;yield across columns&quot;) par(mfrow=c(1,1)) 4.2 Test for spatial autocorrelation 4.2.1 Morans I First, run a standard linear model of the experiment: library(nlme) nin.lme &lt;- lme(yield ~ gen, random = ~1|rep, data = Nin, na.action = na.exclude) Next, establish and weight neighbors for each plot. In this example, only adjacent neighbors in the rook formation (see 3) are used and are weighted proportionally according to their representation as neighbors to an individual. That is, if a unit has 4 adjacent neighbors, each neighbor is weighted as 0.25. If there are only two neighbors, each is weighted 0.5. The function cell2nb() is a function for setting neighbors when working with data laid out in a regular grid. library(spdep) xy_rook &lt;- cell2nb(nrow = max(Nin$row), ncol = max(Nin$col), type=&quot;rook&quot;, torus = FALSE, legacy = FALSE) Make sure your data sorted by the variables assigned to row and col (in that order), and there is one and only one observation in the data set for each unique row/col combination. Even missing plots need a row. Rook adjacency plot for the NIN data library(sf) rook_matrix &lt;- st_as_sf(expand.grid(col=1:22, row=1:11), coords=c(&quot;col&quot;, &quot;row&quot;)) plot(xy_rook, coords = st_geometry(rook_matrix), points = TRUE) Figure 4.1: Rook adjacency plot for the NIN data Each observation considers neighbors to be those which touch the cell in a row or column orientation, but not diagonal. Conduct Morans test via standard t-test and using MC sampling. resid_lme &lt;- residuals(nin.lme) names(resid_lme) &lt;- Nin$plot moran.test(resid_lme, nb2listw(xy_rook), na.action = na.exclude) ## ## Moran I test under randomisation ## ## data: resid_lme ## weights: nb2listw(xy_rook) ## omitted: 1, 12, 23, 34, 45, 56, 59, 67, 78, 89, 100, 108, 111, 122, 133, 144, 155, 204 ## ## Moran I statistic standard deviate = 8.1602, p-value &lt; 2.2e-16 ## alternative hypothesis: greater ## sample estimates: ## Moran I statistic Expectation Variance ## 0.402504491 -0.004484305 0.002487522 moran.mc(resid_lme, nb2listw(xy_rook), 999, na.action = na.exclude) ## ## Monte-Carlo simulation of Moran I ## ## data: resid_lme ## weights: nb2listw(xy_rook) ## omitted: 1, 12, 23, 34, 45, 56, 59, 67, 78, 89, 100, 108, 111, 122, 133, 144, 155, 204 ## number of simulations + 1: 1000 ## ## statistic = 0.4025, observed rank = 1000, p-value = 0.001 ## alternative hypothesis: greater Plot Spatial dependence of residuals library(purrr) res.nn1 &lt;- map_dbl(xy_rook, function(j) mean(resid_lme[j])) rc &lt;- signif(cor(resid_lme, res.nn1, use = &quot;pairwise.complete.obs&quot;), 2) plot(x = resid_lme, y = res.nn1, main = paste0(&quot;r = &quot;, rc), xlab = &quot;residual&quot;, ylab = &quot;average residual of neighbor (rook)&quot;) 4.2.2 Note on Gearys C At this time, the spdep function geary.test() for Gearys C does not handle missing spatial points. It cannot be used it for the NIN data set because it contains empty plots between each block with no data available for those plots. 4.3 Empirical variogram fitting First, create a spatial object by adding spatial coordinates to an ordinary data frame. I like to use the actual size of the plots since they are often exaggerated rectangles that have a significantly greater length than width. Nin_spatial &lt;- Nin_na coordinates(Nin_spatial) &lt;- ~ col.width + row.length class(Nin_spatial) ## [1] &quot;SpatialPointsDataFrame&quot; ## attr(,&quot;package&quot;) ## [1] &quot;sp&quot; Set the maximum distance for calculating the variogram model (which is one-half the maximum distance between two points). max_dist = 0.6*max(dist(coordinates(Nin_spatial))) round(max_dist, digits = 2) ## [1] 29.9 Calculate semivariance for an isotropic model and plot the variogram. library(gstat) class(Nin_spatial) ## [1] &quot;SpatialPointsDataFrame&quot; ## attr(,&quot;package&quot;) ## [1] &quot;sp&quot; head(Nin_spatial) ## class : SpatialPointsDataFrame ## features : 6 ## extent : 1.2, 1.2, 8.6, 30.1 (xmin, xmax, ymin, ymax) ## crs : NA ## variables : 6 ## names : gen, rep, yield, col, row, name ## min values : Buckskin, R1, 19.4, 1, 2, Buckskin ## max values : Vona, R3, 29.85, 1, 7, Vona resid_var1 &lt;- gstat::variogram(yield ~ rep + gen, cutoff = max_dist, width = max_dist/20, # 20 is the number of bins data = Nin_spatial) plot(resid_var1) Test out correlated error models: First, set the starting nugget values as the minimum of the semi-variance. There is likely more sophisticated methods to establish the starting value for nugget, but I have found that extracting the minimum value of the semivariance to work well as a starting point. nugget_start &lt;- min(resid_var1$gamma) Establish models for variogram fitting. Nin_vgm1 &lt;- vgm(model = &quot;Exp&quot;, nugget = nugget_start) # exponential Nin_vgm2 &lt;- vgm(model = &quot;Sph&quot;, nugget = nugget_start) # spherical Nin_vgm3 &lt;- vgm(model = &quot;Gau&quot;, nugget = nugget_start) # Gaussian Nin_vgm4 &lt;- vgm(model = &quot;Mat&quot;, nugget = nugget_start) # Matern Fit the variograms to the data: Nin_variofit1 &lt;- fit.variogram(resid_var1, Nin_vgm1) Nin_variofit2 &lt;- fit.variogram(resid_var1, Nin_vgm2) Nin_variofit3 &lt;- fit.variogram(resid_var1, Nin_vgm3) Nin_variofit4 &lt;- fit.variogram(resid_var1, Nin_vgm4, fit.kappa = T) 4.3.1 Compare variograms Look at the results! (this is fun) plot(resid_var1, Nin_variofit1, main = &quot;Exponential model&quot;) plot(resid_var1, Nin_variofit2, main = &quot;Spherical model&quot;) plot(resid_var1, Nin_variofit3, main = &quot;Gaussian model&quot;) plot(resid_var1, Nin_variofit4, main = &quot;Matern model&quot;) How to pick the best one mdoel? The attribute SSError indicates how well each model was able to predict the binned error terms as a function of distance. However, its important to look at the model as well to see if the model was able to fit the data. print(&quot;Exponential&quot;); attr(Nin_variofit1, &quot;SSErr&quot;) ## [1] &quot;Exponential&quot; ## [1] 1129.799 print(&quot;Spherical&quot;); attr(Nin_variofit2, &quot;SSErr&quot;) ## [1] &quot;Spherical&quot; ## [1] 1012.76 print(&quot;Gaussian&quot;); attr(Nin_variofit3, &quot;SSErr&quot;) ## [1] &quot;Gaussian&quot; ## [1] 752.5491 print(&quot;Matern&quot;); attr(Nin_variofit4, &quot;SSErr&quot;) ## [1] &quot;Matern&quot; ## [1] 771.4813 Nin_variofit3 had the lowest error terms, corresponding to the Gaussian model. Results from the empirical variogram: Nin_variofit3 ## model psill range ## 1 Nug 20.04106 0.00000 ## 2 Gau 22.04013 12.19921 The variogram parameters can be easily extracted from this table: nugget &lt;- Nin_variofit3$psill[1] # &quot;measurement error&quot; range &lt;- Nin_variofit3$range[2] # distance to establish independence between data points sill &lt;- sum(Nin_variofit3$psill) # maximum semivariance 4.3.2 Explore anisotropy Most field experiments occur on a relatively small scale,where the entire experimental layout is less than 0.25 square miles. As such, isotropic models (where spatial correlation is based on distance but not direction) are often adequate for understanding localised field heterogeneity. However, there are always exceptions where a spatial correlation in a field trail is best describe by an anistropic model. Reestablish models for variogram fitting: Nin_vgm1a &lt;- vgm(model = &quot;Exp&quot;, anis = c(90, 0.5)) # 90 refers to the angle of the main direction and 0.5 creates a second 90 degree axis of variability to estimate Nin_vgm2a &lt;- vgm(model = &quot;Sph&quot;, anis = c(90, 0.5)) Nin_vgm3a &lt;- vgm(model = &quot;Gau&quot;, anis = c(90, 0.5)) Nin_vgm4a &lt;- vgm(model = &quot;Mat&quot;, anis = c(90, 0.5)) Fit the variograms to the data: Nin_variofit1a &lt;- fit.variogram(resid_var1, Nin_vgm1a) Nin_variofit2a &lt;- fit.variogram(resid_var1, Nin_vgm2a) Nin_variofit3a &lt;- fit.variogram(resid_var1, Nin_vgm3a) Nin_variofit4a &lt;- fit.variogram(resid_var1, Nin_vgm4a, fit.kappa = T) print(&quot;Exponential&quot;); attr(Nin_variofit1a, &quot;SSErr&quot;) ## [1] &quot;Exponential&quot; ## [1] 8387.429 print(&quot;Spherical&quot;); attr(Nin_variofit2a, &quot;SSErr&quot;) ## [1] &quot;Spherical&quot; ## [1] 9448.75 print(&quot;Gaussian&quot;); attr(Nin_variofit3a, &quot;SSErr&quot;) ## [1] &quot;Gaussian&quot; ## [1] 19319.19 print(&quot;Matern&quot;); attr(Nin_variofit4a, &quot;SSErr&quot;) ## [1] &quot;Matern&quot; ## [1] 7253.594 Error terms are considerably higher than in the isotropic model. plot(resid_var1, Nin_variofit1a, main = &quot;Exponential model&quot;) Hmm, that plot is not very convincing. In this field trial, there is evidence of spatial correlation as a function of distance, but there is not evidence this spatial correlation is impacted by direction. Another reminder on field trends Its important to remember these methods are intended to describe localised spatial correlation. Field-wide spatial gradients, such as position on a slope, should be modelled as a separate trend. "],["rcbd-r.html", "Section 5 RCBD Example: R 5.1 Prep work 5.2 Correlated errors 5.3 Row/Column Trends: 5.4 Splines 5.5 Bayesian AR1xAR1 5.6 Model Selection 5.7 Making decisions", " Section 5 RCBD Example: R Here are step-by-step instructions for how to incorporate spatial covariates into analysis of a field experiment that uses a randomized complete block design. Several techniques are explored: Load data if it is not already in your R environment: library(agridat); library(dplyr); library(tidyr); library(purrr); library(sp) data(&quot;stroup.nin&quot;) Nin &lt;- stroup.nin %&gt;% mutate(col.width = col * 1.2, row.length = row * 4.3) %&gt;% fill(rep, .direction = &quot;up&quot;) %&gt;% arrange(col, row) Nin_na &lt;- filter(Nin, !is.na(yield)) Nin_spatial &lt;- Nin_na coordinates(Nin_spatial) &lt;- ~ col.width + row.length Once spatial auto-correlation has been identified in field trials, the next step is to employ a modeling technique that will reduce the impact of spatial variation on the final estimates from the analysis. 5.1 Prep work The first thing is to run a standard linear model. A common model specification for the randomized complete block design (RCBD) is to include cultivar as a fixed effect and block as a random effect. library(nlme); library(emmeans) nin_lme &lt;- lme(yield ~ gen, random = ~1|rep, data = Nin, na.action = na.exclude) # extract the least squares means for variety preds_lme &lt;- as.data.frame(emmeans(nin_lme, &quot;gen&quot;)) The variables gen refers to the cultivar or breeding line being trialed, and rep is the block, and the dependent variable, yield is grain yield. Basic exploratory analysis of this data set was conducted in 4. 5.2 Correlated errors Gaussian Example In order to fit models using correlated error model, we will need to first obtain preliminary estimates of the nugget, sill and range: from fitting an empirical variogram. library(gstat) max_dist &lt;- 0.6*max(dist(coordinates(Nin_spatial))) resid.var1 &lt;- variogram(yield ~ rep + gen, cutoff = max_dist, width = max_dist/10, data = Nin_spatial) nugget_start &lt;- min(resid.var1$gamma) In the previous section, an isotropic Gaussian function was identified as the best model for describing the decay of error correlations over distance. nin_vgm &lt;- vgm(model = &quot;Gau&quot;, nugget = nugget_start) nin_variofit &lt;- fit.variogram(resid.var1, nin_vgm) nugget &lt;- nin_variofit$psill[1] range &lt;- nin_variofit$range[2] sill &lt;- sum(nin_variofit$psill) nugget.effect &lt;- nugget/sill Create a correlated error structure using the nlme package. cor.gaus &lt;- corSpatial(value = c(range, nugget.effect), form = ~ row.length + col.width, nugget = T, fixed = F, type = &quot;gaussian&quot;, metric = &quot;euclidean&quot;) Update the linear mixed model with the correlated error structure: nin_gaus &lt;- update(nin_lme, corr = cor.gaus) Extract variety estimates: preds_gaus &lt;- as.data.frame(emmeans(nin_gaus, &quot;gen&quot;)) Other models can be implemented following this template. 5.2.1 Exponential rm(nin_vgm, nin_variofit, nugget, sill, range, nugget.effect) nin_vgm &lt;- vgm(model = &quot;Exp&quot;, nugget = nugget_start) nin_variofit &lt;- fit.variogram(resid.var1, nin_vgm) nugget &lt;- nin_variofit$psill[1] range &lt;- nin_variofit$range[2] sill &lt;- sum(nin_variofit$psill) nugget.effect &lt;- nugget/sill cor.exp &lt;- corSpatial(value = c(range, nugget.effect), form = ~ row.length + col.width, nugget = T, fixed = F, type = &quot;exponential&quot;, metric = &quot;euclidean&quot;) nin_exp &lt;- update(nin_lme, corr = cor.exp) preds_exp &lt;- as.data.frame(emmeans(nin_exp, &quot;gen&quot;)) 5.2.2 Spherical rm(nin_vgm, nin_variofit, nugget, sill, range, nugget.effect) nin_vgm &lt;- vgm(model = &quot;Sph&quot;, nugget = nugget_start) nin_variofit &lt;- fit.variogram(resid.var1, nin_vgm) nugget &lt;- nin_variofit$psill[1] range &lt;- nin_variofit$range[2] sill &lt;- sum(nin_variofit$psill) nugget.effect &lt;- nugget/sill cor.sph &lt;- corSpatial(value = c(range, nugget.effect), form = ~ row.length + col.width, nugget = T, fixed = F, type = &quot;spherical&quot;, metric = &quot;euclidean&quot;) nin_sph &lt;- update(nin_lme, corr = cor.sph) preds_sph &lt;- as.data.frame(emmeans(nin_sph, &quot;gen&quot;)) 5.2.3 Power rm(nin_vgm, nin_variofit, nugget, sill, range, nugget.effect) cor.pow &lt;- corSpatial(form = ~ row.length + col.width, nugget = T, fixed = F, type = &quot;ratio&quot;, metric = &quot;euclidean&quot;) nin_pow &lt;- update(nin_lme, corr = cor.pow) preds_pow &lt;- as.data.frame(emmeans(nin_pow, &quot;gen&quot;)) 5.2.4 Mat√©rn A Matern error function is not available in nlme, but the packge spaMM has written an extension implementing the Mat√©rn, Cauchy and other covariance structures. The Mat√©rn is demonstrated below. rm(nin_vgm, nin_variofit, nugget, sill, range, nugget.effect) library(spaMM) # required for running `corMatern()` nin_vgm &lt;- vgm(model = &quot;Mat&quot;, nugget = nugget_start) nin_variofit &lt;- fit.variogram(resid.var1, nin_vgm, fit.kappa = TRUE) nugget &lt;- nin_variofit$psill[1] range &lt;- nin_variofit$range[2] sill &lt;- sum(nin_variofit$psill) nugget.effect &lt;- nugget/sill kappa &lt;- nin_variofit$kappa[2] # from spAMM documentation: &quot;Warning: the range parameter used in corSpatial objects is the inverse of the scale parameter used in MaternCorr and thus they have opposite meaning despite both being denoted  elsewhere in this package or in nlme literature&quot; - so range is expressed as an inverse cor.mat &lt;- corMatern(value = c(1/range, kappa, nugget.effect), form = ~ row.length + col.width, nugget = T, fixed = F, metric = &quot;euclidean&quot;) nin_matern &lt;- update(nin_lme, corr = cor.mat) preds_mat &lt;- as.data.frame(emmeans(nin_matern, &quot;gen&quot;)) In the nlme package, there is also an option for a linear model in the corSpatial() function. However, if a linear trend is present without a range or sill, it is recommended that a linear trend be fitted to the data instead. 5.3 Row/Column Trends: The package lme4 is used since it can handle multiple random effects while nlme cannot do this without nesting the effects. I prefer nlme for linear modeling in this tutorial because of its built-in functionality for including spatial variation. library(lme4) ## Loading required package: Matrix ## ## Attaching package: &#39;Matrix&#39; ## The following objects are masked from &#39;package:tidyr&#39;: ## ## expand, pack, unpack ## ## Attaching package: &#39;lme4&#39; ## The following object is masked from &#39;package:nlme&#39;: ## ## lmList # variables specifying row and column as factors are needed Nin$colF &lt;- as.factor(Nin$col) Nin$rowF &lt;- as.factor(Nin$row) nin_trend &lt;- lmer(yield ~ gen + (1|rep) + (1|colF) + (1|rowF), data = Nin, na.action = na.exclude) # extract the least squares means for variety preds_trend &lt;- as.data.frame(emmeans(nin_trend, &quot;gen&quot;)) 5.4 Splines The package SpATS, spatial analysis for field trials, implements B-splines for row and column effects. library(SpATS) nin_spline &lt;- SpATS(response = &quot;yield&quot;, spatial = ~ PSANOVA(col, row, nseg = c(10,20), degree = 3, pord = 2), genotype = &quot;gen&quot;, random = ~ rep, # + rowF + colF, data = Nin, control = list(tolerance = 1e-03, monitoring = 0)) preds_spline &lt;- predict(nin_spline, which = &quot;gen&quot;) %&gt;% dplyr::select(gen, emmean = &quot;predicted.values&quot;, SE = &quot;standard.errors&quot;) 5.5 Bayesian AR1xAR1 ## library(INLA) ## also need to add model info... 5.6 Model Selection Now that we have built these spatial models, how do we pick the right one? Unfortunately, there is no one model that works best in all circumstances. In addition, there is no single way for choosing the best model! Some appraoches include: comparing model fitness (e.g. AIC, BIC, log likelihood) comparing posthoc power (that is, the p-values for the treatments) comparing standard error of the estimates In order to make comparisons, the code below assembles all the model objects into one list. They are generated from different processes, as shown by the class attribute of each one, so this takes some data conditioning. all.models &lt;- mget(ls(pattern = &quot;^nin_*&quot;)) # print out their class map(all.models, class) ## $nin.lme ## [1] &quot;lme&quot; ## ## $nin_exp ## [1] &quot;lme&quot; ## ## $nin_gaus ## [1] &quot;lme&quot; ## ## $nin_lme ## [1] &quot;lme&quot; ## ## $nin_matern ## [1] &quot;lme&quot; ## ## $nin_pow ## [1] &quot;lme&quot; ## ## $nin_sph ## [1] &quot;lme&quot; ## ## $nin_spline ## [1] &quot;SpATS&quot; ## ## $nin_trend ## [1] &quot;lmerMod&quot; ## attr(,&quot;package&quot;) ## [1] &quot;lme4&quot; 5.6.1 Spatial dependence of residuals It would be helpful to know if these methods were effective in reducing the spatial dependence among the error residuals. The function below extracts the residuals from each model and is needed because of different handling of missing values by the package SpATS. L1 &lt;- nrow(Nin) non_na &lt;- !is.na(Nin$yield) L2 &lt;- sum(non_na) residuals &lt;- map(all.models, function (x) { resids &lt;- residuals(x) if(is.data.frame(resids)) { colnum = ncol(resids) resids = resids[,colnum] } if(length(resids) == L2) { resids_pl = rep(NA, L1) resids_pl[non_na] = resids resids = resids_pl } return(resids) }) names(residuals) &lt;- names(all.models) Run a Morans I test on the extracted residuals: library(spdep) xy.rook &lt;- cell2nb(nrow = max(Nin$row), ncol = max(Nin$col), type=&quot;rook&quot;) Moran.I &lt;- map_df(residuals, function(x) { mi = moran.test(x, nb2listw(xy.rook), na.action = na.exclude) mi.stat &lt;- mi$estimate mi.stat$p.value &lt;- mi$p.value return(mi.stat) }) %&gt;% mutate(model = names(all.models)) %&gt;% dplyr::select(c(5, 1:4)) %&gt;% mutate_at(2:5, round, 4) %&gt;% arrange(p.value) Moran.I ## # A tibble: 9 x 5 ## model `Moran I statistic` Expectation Variance p.value ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 nin.lme 0.402 -0.0045 0.0025 0 ## 2 nin_exp 0.756 -0.0045 0.0025 0 ## 3 nin_gaus 0.760 -0.0045 0.0025 0 ## 4 nin_lme 0.402 -0.0045 0.0025 0 ## 5 nin_matern 0.760 -0.0045 0.0025 0 ## 6 nin_pow 0.760 -0.0045 0.0025 0 ## 7 nin_sph 0.757 -0.0045 0.0025 0 ## 8 nin_trend 0.132 -0.0045 0.0025 0.0032 ## 9 nin_spline -0.0514 -0.0045 0.0025 0.826 Only one model, nin_spline resulted in an improvement in Morans I. Nearest neighbor approaches can also improve Morans I. The significant p-values indicate that auto-correlation is still present in those models. However, that doesnt mean the other models are ineffective. The other models incorporate the spatial auto-correlation directly into the error terms. 5.6.2 Compare Model Fit log likelihood, AIC, BIC Since these are not nested models, likelihood ratio tests cannot be performed. Log likelihood can be compared within the models from nlme but not across packages since they use different estimation procedures. nlme_mods &lt;- list(nin_lme, nin_exp, nin_gaus, nin_sph, nin_pow, nin_matern, nin_trend) names(nlme_mods) &lt;- c(c(&quot;LMM&quot;, &quot;exponential&quot;, &quot;gaussian&quot;, &quot;spherical&quot;, &quot;power&quot;, &quot;matern&quot;, &quot;row-col_trend&quot;)) data.frame(loglikihood = sapply(nlme_mods, logLik), AIC = sapply(nlme_mods, AIC), BIC = sapply(nlme_mods, AIC, k = log(nrow(Nin_na)))) ## loglikihood AIC BIC ## LMM -608.8508 1333.702 1531.577 ## exponential -543.0149 1206.030 1410.729 ## gaussian -540.3401 1200.680 1405.379 ## spherical -541.7560 1203.512 1408.211 ## power -540.8889 1201.778 1406.477 ## matern -540.3386 1202.677 1410.788 ## row-col_trend -577.6523 1275.305 1480.003 Larger log likelihoods indicate a better fitting model to the data. A rule of thumb when comparing log likelihoods is that differences less than 2 are not considered notable. These results suggest that the Gaussian, spherical, power and Mat√©rn models are substantially equivalent in capturing the variation present in this data set. 5.6.3 Experiment-wide error exp_error &lt;- as.data.frame(sapply(nlme_mods, sigma)) exp_error ## sapply(nlme_mods, sigma) ## LMM 7.041475 ## exponential 8.967355 ## gaussian 8.035251 ## spherical 7.946038 ## power 8.934250 ## matern 8.061689 ## row-col_trend 4.754971 The overall experimental error, \\(\\sigma\\), increased slightly in the correlated error models because field variation has been re-partitioned to the error when it was (erroneously) absorbed by the other experimental effects. As a result, the coefficient of variation is not a good metric for evaluating the quality of spatial models. CV = sapply(nlme_mods, function(x) { sigma(x)/mean(fitted(x), na.rm = T) * 100 }) as.data.frame(CV) ## CV ## LMM 27.58441 ## exponential 35.99247 ## gaussian 30.68459 ## spherical 31.74386 ## power 34.86841 ## matern 30.81737 ## row-col_trend 18.62722 5.6.4 Post-hoc power Simulation studies indicate that incorporating spatial correlation into field trial analysis can improve the overall power of the experiment (the probability of detecting true differences in treatments). When working with data from a completed experiment, power is a transformed p-value. Performing ANOVA can indicate which approach maximizes power. anovas &lt;- lapply(nlme_mods, function(x){ aov &lt;- as.data.frame(anova(x))[2,] }) bind_rows(anovas) %&gt;% mutate(model = c(&quot;LMM&quot;, &quot;exponential&quot;, &quot;gaussian&quot;, &quot;spherical&quot;, &quot;power&quot;, &quot;matern&quot;, &quot;row/column trend&quot;)) %&gt;% arrange(desc(`p-value`)) %&gt;% dplyr::select(c(model, 1:4)) %&gt;% tibble::remove_rownames() ## model numDF denDF F-value p-value ## 1 LMM 55 165 0.8754898 0.711852150 ## 2 gaussian 55 165 1.7815059 0.002816775 ## 3 matern 55 165 1.7816169 0.002814131 ## 4 power 55 165 1.7878697 0.002669019 ## 5 exponential 55 165 1.8348864 0.001786539 ## 6 spherical 55 165 1.8370929 0.001752952 ## 7 row/column trend NA NA NA NA This table indicates changes in the hypothesis test for gen. There is a dramatic change in power for this test when incorporating spatial covariance structures. 5.6.5 Standard error of treatment means Retrieve predictions generated in the previous section: #(standardise names for downstream merging step) #preds_ar1ar1 &lt;- preds_ar1ar1 %&gt;% rename(emmean = &quot;predicted.value&quot;, SE = &quot;standard.error&quot;) all.preds &lt;- mget(ls(pattern = &quot;^preds_*&quot;)) Extract standard errors and plot: errors &lt;- lapply(all.preds, &quot;[&quot;, &quot;SE&quot;) pred.names &lt;- gsub(&quot;preds_&quot;, &quot;&quot;, names(errors)) error_df &lt;- bind_cols(errors) colnames(error_df) &lt;- pred.names Figure 5.1: Differences in Variety Standard Error 5.6.6 Treatment means Extract estimates: preds &lt;- lapply(all.preds, &quot;[&quot;, &quot;emmean&quot;) preds_df &lt;- bind_cols(preds) colnames(preds_df) &lt;- pred.names preds_df$gen &lt;- preds_exp$gen Plot changes in ranks: Figure 5.2: Differences in Variety Ranks The black lines link the least squares means for a single variety. There is some consistency in the rankings between exponential, Gaussian, power, Mat√©rn, and spherical covariance models. The control RCBD model, lme, has fundamentally different rankings. The spline and AR1xAR1 ranking are also sightly different from the other models. Nevertheless, the following plot indicates considerable consensus in the least squares means from all of the spatial models. The upper diagonal contains Pearson correlations between those values. Figure 5.3: Correlations in Variety Means 5.7 Making decisions There is no consensus on how to pick the best model. Some studies rely on log likelihood, while others seek to maximize the experimental power. Others have sought to minimize the root mean square error from cross validation. The evidence suggest that for this data set, using any spatial model is better than running a na√Øve RCBD model. "],["rcbd-sas.html", "Section 6 RCBD Example: SAS 6.1 Load and Explore Data 6.2 Estimating and Testing Spatial Correlation 6.3 4.3 Estimation and Modeling of Semivariance 6.4 Using the Estimated variogram in an Adjusted Analysis 6.5 Compare Estimated Means", " Section 6 RCBD Example: SAS 6.1 Load and Explore Data These data are from a winter wheat variety trial in Alliance, Nebraska (Stroup, Baenziger, and Mulitze 1994) and are commonly used to demonstrate spatial adjustment in linear modeling. The data represent yields of 56 varieties originally layed out in a randomized complete block design (RCB). The local topography combined with winter kill, however, induced spatial variability that did not correspond to the RCB design (Stroup 2013) which produced biased estimates in a standard unadjusted analysis. The code below reads the data from a CSV file where missing values for yield are denoted as NA. These values are not actually missing, but represent blank plots in the original design of the study. The PROC FORMAT section converts these to numeric missing values in SAS (defined as a single period). They are then removed from the data before proceeding to analyses. Also note that row and column indices are multiplied by constants to convert them to the meter dimensions of the plots. This CSV data file can be downloaded here The first six observations are displayed. The data contains variables for variety (gen), replication (rep), yield, and column and row identifiers. Last, a map of the 4 replications (blocks) from the original experimental design is shown. proc format; invalue has_NA &#39;NA&#39; = .; ; data alliance; infile &#39;.\\data\\Stroup_NIN_wheat.csv&#39; firstobs=2 delimiter=&#39;,&#39;; informat yield has_NA.; input entry $ rep $ yield col row; Row = 4.3*Row; Col = 1.2*Col; if yield=. then delete; run; proc print data=alliance(obs=6); title1 &#39; Alliance Nebraska Wheat Variety Data&#39;; run; ODS html GPATH = &quot;.\\img\\&quot; ; proc sgplot data=alliance; styleattrs datacolors=(red blue green yellow) datalinepatterns=(solid dash); HEATMAPPARM y=row x=col COLORgroup=rep/ outline; title1 &#39;Layout of Blocks&#39;; run; Alliance Nebraska Wheat Variety Data Obs yield entry rep col row 1 29.25 Lancer R1 19.2 4.3 2 31.55 Brule R1 20.4 4.3 3 35.05 Redland R1 21.6 4.3 4 30.10 Cody R1 22.8 4.3 5 33.05 Arapahoe R1 24.0 4.3 6 30.25 NE83404 R1 25.2 4.3 6.1.1 Plots of Field Trends A first step in assessing spatial variability is to plot the data to visually assess any trends or patterns. This code uses the SGPLOT procedure to examine spatial patterns through a heat map of yields, as well as potential trends across replications, columns, and rows using box plots. ODS html GPATH = &quot;.\\img\\&quot; ; proc sgplot data=alliance; HEATMAPPARM y=Row x=Col COLORRESPONSE=yield/ colormodel=(blue yellow green); run; proc sgplot data=alliance; vbox yield/category=rep FILLATTRS=(color=red) LINEATTRS=(color=black) WHISKERATTRS=(color=black); run; proc sgplot data=alliance; vbox yield/category=Col FILLATTRS=(color=yellow) LINEATTRS=(color=black) WHISKERATTRS=(color=black); run; proc sgplot data=alliance; vbox yield/category=Row FILLATTRS=(color=blue) LINEATTRS=(color=black) WHISKERATTRS=(color=black); run; In the heat map, there is a notable region where yield dips in the north west corner of the study area. This area runs across the two top most blocks and is positioned towards their ends, making those blocks non-homogeneous. As Stroup (Stroup 2013) notes, this is due to a hilly area with low snow cover and high exposure to low winter temperatures. The box plots demonstrate this pattern across blocks, columns, and rows as well. From these initial graphics, it is clear there is discernible spatial patterns and trends present. 6.2 Estimating and Testing Spatial Correlation 6.2.1 Examine the Number of Distance Pairs and Maximum Lags between Residuals The process of modeling spatial variability begins by obtaining the residuals from the original RCB analysis. Here PROC MIXED is used to fit the RCB model and output the model residuals to the SAS data set residuals. ods html close; proc mixed data=alliance; class Rep Entry; model Yield = Entry / outp=residuals; random Rep; run; ods html; Examining and estimating spatial variability typically proceeds in several steps. In SAS, these can all be accomplished using PROC VARIOGRAM. In this first step, we summarize the potential distances (lags) between row/column positions. The nhclasses option sets a value for the number of lag classes or bins to try. Some trial and error here may be necessary to find a good setting, however, this value should be big enough to cover the range of possible distances between data row and column coordinates. Setting this to 40 was found to be a reasonable value here. The novariogram option tells SAS to only look at these distances and not compute the empirical semivariance values yet. /* Examine lag distance &amp; maxlag */ ODS html GPATH = &quot;.\\img\\&quot; ; proc variogram data=residuals; compute novariogram nhclasses=40; coordinates xc=row yc=col; var resid; run; Dependent Variable: Resid Number of Observations Read 224 Number of Observations Used 224 Pairs Information Number of Lags 41 Lag Distance 1.25 Maximum Data Distance in row 43.00 Maximum Data Distance in col 25.20 Maximum Data Distance 49.84 Pairwise Distance Intervals LagClass Bounds Number of Pairs Percentageof Pairs 0 0.00 0.62 0 0.00% 1 0.62 1.87 210 0.84% 2 1.87 3.12 199 0.80% 3 3.12 4.36 387 1.55% 4 4.36 5.61 917 3.67% 5 5.61 6.85 832 3.33% 6 6.85 8.10 462 1.85% 7 8.10 9.35 1571 6.29% 8 9.35 10.59 1215 4.86% 9 10.59 11.84 615 2.46% 10 11.84 13.08 1252 5.01% 11 13.08 14.33 1563 6.26% 12 14.33 15.58 910 3.64% 13 15.58 16.82 867 3.47% 14 16.82 18.07 1805 7.23% 15 18.07 19.31 1058 4.24% 16 19.31 20.56 873 3.50% 17 20.56 21.81 1352 5.41% 18 21.81 23.05 935 3.74% 19 23.05 24.30 943 3.78% 20 24.30 25.54 517 2.07% 21 25.54 26.79 1439 5.76% 22 26.79 28.04 513 2.05% 23 28.04 29.28 387 1.55% 24 29.28 30.53 868 3.48% 25 30.53 31.77 555 2.22% 26 31.77 33.02 350 1.40% 27 33.02 34.27 172 0.69% 28 34.27 35.51 770 3.08% 29 35.51 36.76 259 1.04% 30 36.76 38.00 188 0.75% 31 38.00 39.25 362 1.45% 32 39.25 40.50 207 0.83% 33 40.50 41.74 147 0.59% 34 41.74 42.99 59 0.24% 35 42.99 44.23 117 0.47% 36 44.23 45.48 49 0.20% 37 45.48 46.73 30 0.12% 38 46.73 47.97 11 0.04% 39 47.97 49.22 7 0.03% 40 49.22 50.46 3 0.01% This output indicates that, with 40 bins, the minimum lag distance is approximately 1.2m and that the maximum lag distances vary from 25 to 43m in rows and columns, respectively. The histogram graphically displays the number of pairs at each lag distance bin. Ideally, we want bins that have at least 30 pairs to improve accuracy in estimation of the empirical semivariance. There is sufficient data here such that setting the maximum lag to 30 results in bins that have much more than 30 pairs and will provide an accurate estimate of semivariance. 6.2.2 Compute Morans I and Gearys C. Two common metrics of spatial correlation are Morans I and Gearys C. Both these measures are essentially weighted correlations between pairs of observations and measure global and local variability, respectively. If no spatial correlation is present, Morans I has an expected value close to 0.0 while Gearys C will be close to 1.0. The estimates for I and C can be computed and tested against these null values with the PROC VARIOGRAM code below. ODS html GPATH = &quot;.\\img\\&quot; ; proc variogram data=residuals plots(only)=moran ; compute lagd=1.2 maxlag=30 novariogram autocorr(assum=nor) ; coordinates xc=row yc=col; var resid; run; Dependent Variable: Resid Number of Observations Read 224 Number of Observations Used 224 Pairs Information Number of Lags 11 Lag Distance 4.98 Maximum Data Distance in row 43.00 Maximum Data Distance in col 25.20 Maximum Data Distance 49.84 Pairwise Distance Intervals LagClass Bounds Number of Pairs Percentageof Pairs 0 0.00 2.49 409 1.64% 1 2.49 7.48 2598 10.40% 2 7.48 12.46 3757 15.04% 3 12.46 17.44 5204 20.84% 4 17.44 22.43 4738 18.97% 5 22.43 27.41 3455 13.83% 6 27.41 32.40 2241 8.97% 7 32.40 37.38 1518 6.08% 8 37.38 42.36 813 3.26% 9 42.36 47.35 228 0.91% 10 47.35 52.33 15 0.06% Autocorrelation Statistics Assumption Coefficient Observed Expected Std Dev Z Pr &gt; |Z| Normality Moran's I 0.330 -0.00495 0.0836 4.01 &lt;.0001 Normality Geary's c 0.614 1.00000 0.0901 -4.29 &lt;.0001 Both Morans I and Gearys C are significant here, indicating the presence of spatial correlation. The accompanying scatter plot of residuals vs lag distance also show a positive correlation where residuals increase in magnitude with increasing distance between points. 6.3 4.3 Estimation and Modeling of Semivariance 6.3.1 4.3.1 Estimating Empirical Semivariance Using the lag bdistance and maximum lag values obtained in the previous steps, we can now estimate an empirical variogram (via the compute statement) as described in Section 2. ODS html GPATH = &quot;.\\img\\&quot; ; proc variogram data=residuals plots(only)=(semivar); coordinates xc=Col yc=Row; compute lagd=1.2 maxlags=30; var resid; run; Dependent Variable: Resid Number of Observations Read 224 Number of Observations Used 224 Dependent Variable: Resid Empirical Semivariogram LagClass PairCount AverageDistance Semivariance 0 0 . . 1 210 1.20 20.133 2 199 2.40 22.159 3 188 3.60 24.453 4 1116 4.64 21.737 5 832 6.01 25.005 6 462 7.32 28.096 7 1268 8.63 26.521 8 996 9.54 30.424 9 904 10.75 34.523 10 589 11.86 37.983 11 1812 13.14 32.064 12 1164 14.30 36.624 13 1021 15.67 41.839 14 1207 17.12 38.201 15 1329 17.97 38.456 16 988 19.19 41.319 17 691 20.46 47.746 18 1556 21.69 39.750 19 965 22.82 41.013 20 558 23.98 42.051 21 522 25.13 43.919 22 1273 26.21 35.351 23 588 27.55 42.812 24 312 28.69 43.350 25 868 30.13 37.531 26 555 31.11 42.186 27 350 32.41 48.901 28 172 33.60 56.251 29 704 34.68 33.781 30 325 35.91 45.543 Dependent Variable: Resid In the plot, the semi-variance increases as distance between points increases up to approximately 20m where it begins to level off. This type of pattern is very common for spatial relationships. 6.3.2 Fitting an Empirical Variogram Model In Section 3, several theoretical variogram models were described. We can use PROC VARIOGRAM to fit and compare any number of these models. In the code below, the Gaussian, Exponential, Power, and Spherical models are fit using the model statement. SAS, by default, will carry out a more sophisticated spatial modeling approach, not covered here, that uses combinations of these models. We, however, just want to focus on single model scenarios. Hence, the nest=1 option is given which restricts the variogram modeling to single models only. ODS html GPATH = &quot;.\\img\\&quot; ; proc variogram data=residuals plots(only)=(fitplot); coordinates xc=Col yc=Row; compute lagd=1.2 maxlags=30; model form=auto(mlist=(gau, exp, pow, sph) nest=1); var resid; run; Dependent Variable: Resid Number of Observations Read 224 Number of Observations Used 224 Dependent Variable: Resid Empirical Semivariogram LagClass PairCount AverageDistance Semivariance 0 0 . . 1 210 1.20 20.133 2 199 2.40 22.159 3 188 3.60 24.453 4 1116 4.64 21.737 5 832 6.01 25.005 6 462 7.32 28.096 7 1268 8.63 26.521 8 996 9.54 30.424 9 904 10.75 34.523 10 589 11.86 37.983 11 1812 13.14 32.064 12 1164 14.30 36.624 13 1021 15.67 41.839 14 1207 17.12 38.201 15 1329 17.97 38.456 16 988 19.19 41.319 17 691 20.46 47.746 18 1556 21.69 39.750 19 965 22.82 41.013 20 558 23.98 42.051 21 522 25.13 43.919 22 1273 26.21 35.351 23 588 27.55 42.812 24 312 28.69 43.350 25 868 30.13 37.531 26 555 31.11 42.186 27 350 32.41 48.901 28 172 33.60 56.251 29 704 34.68 33.781 30 325 35.91 45.543 Dependent Variable: Resid Angle: Omnidirectional Semivariogram Model Fitting Model Selection from 4 form combinations Fit Summary Class Model WeightedSSE AIC 1 Gau 90.90699 39.25919 2 Sph 95.41630 40.71156 3 Exp 111.51151 45.38791 4 Pow 131.80037 50.40273 Semivariogram ModelFitting Name Gaussian Label Gau Model Information Parameter InitialValue Nugget 18.1070 Scale 27.0845 Range 17.9554 Optimization Information Optimization Technique Dual Quasi-Newton Parameters in Optimization 3 Lower Boundaries 3 Upper Boundaries 0 Starting Values From PROC Parameter Estimates Parameter Estimate ApproxStd Error DF t Value ApproxPr &gt; |t| Nugget 19.6331 0.5918 27 33.18 &lt;.0001 Scale 22.0523 0.6610 27 33.36 &lt;.0001 Range 11.6661 0.4488 27 26.00 &lt;.0001 Dependent Variable: Resid The table Fit Summary provides statistics on each variogram model fit. The AIC statistic can be used as a guide where smaller values indicate a better fit. For this data, the Gaussian model is rated as best, although the Spherical model is practically indistinguishable. Given the numerically lower AIC value, however, PROC VARIOGRAM selects the Gaussian model and reports the model parameter estimates in the final table. These parameter estimates will be used in the next step. The plot shown at the end shows how well each variogram model fits the binned semivariance values. 6.4 Using the Estimated variogram in an Adjusted Analysis The previous steps have: 1. Diagnosed the presence and pattern of spatial variability. 1. Identified and estimated the a model to describe the variability The last step is to utilize this information in a statistical analysis as outlined at the beginning of Section 3. To do this, the linear mixed model procedure PROC MIXED will be used to incorporate the spatial variability into the linear model variance-covariance matrix, assuming the variogram model identified above. As an intial step, for comparison purposes, the unadjusted RCB model is run first and the means saved in data set NIN_RCBD_means. 6.4.1 Unadjusted RCBD Model /** Fit unadjusted RCBD model **/ ODS html GPATH = &quot;.\\img\\&quot; ; proc mixed data=alliance ; class entry rep; model yield = entry ; random rep; lsmeans entry/cl; ods output LSMeans=NIN_RCBD_means; title1 &#39;NIN data: RCBD&#39;; run; NIN data: RCBD Model Information Data Set WORK.ALLIANCE Dependent Variable yield Covariance Structure Variance Components Estimation Method REML Residual Variance Method Profile Fixed Effects SE Method Model-Based Degrees of Freedom Method Containment Class Level Information Class Levels Values entry 56 Arapahoe Brule Buckskin Centura Centurk7 Cheyenne Cody Colt Gage Homestea KS831374 Lancer Lancota NE83404 NE83406 NE83407 NE83432 NE83498 NE83T12 NE84557 NE85556 NE85623 NE86482 NE86501 NE86503 NE86507 NE86509 NE86527 NE86582 NE86606 NE86607 NE86T666 NE87403 NE87408 NE87409 NE87446 NE87451 NE87457 NE87463 NE87499 NE87512 NE87513 NE87522 NE87612 NE87613 NE87615 NE87619 NE87627 Norkan Redland Roughrid Scout66 Siouxlan TAM107 TAM200 Vona rep 4 R1 R2 R3 R4 Dimensions Covariance Parameters 2 Columns in X 57 Columns in Z 4 Subjects 1 Max Obs per Subject 224 Number of Observations Number of Observations Read 224 Number of Observations Used 224 Number of Observations Not Used 0 Iteration History Iteration Evaluations -2 Res Log Like Criterion 0 1 1240.74178756 1 1 1217.70153249 0.00000000 Convergence criteria met. Covariance Parameter Estimates Cov Parm Estimate rep 9.8829 Residual 49.5824 Fit Statistics -2 Res Log Likelihood 1217.7 AIC (Smaller is Better) 1221.7 AICC (Smaller is Better) 1221.8 BIC (Smaller is Better) 1220.5 Type 3 Tests of Fixed Effects Effect Num DF Den DF F Value Pr &gt; F entry 55 165 0.88 0.7119 Least Squares Means Effect entry Estimate StandardError DF t Value Pr &gt; |t| Alpha Lower Upper entry Arapahoe 29.4375 3.8557 165 7.63 &lt;.0001 0.05 21.8247 37.0503 entry Brule 26.0750 3.8557 165 6.76 &lt;.0001 0.05 18.4622 33.6878 entry Buckskin 25.5625 3.8557 165 6.63 &lt;.0001 0.05 17.9497 33.1753 entry Centura 21.6500 3.8557 165 5.62 &lt;.0001 0.05 14.0372 29.2628 entry Centurk7 30.3000 3.8557 165 7.86 &lt;.0001 0.05 22.6872 37.9128 entry Cheyenne 28.0625 3.8557 165 7.28 &lt;.0001 0.05 20.4497 35.6753 entry Cody 21.2125 3.8557 165 5.50 &lt;.0001 0.05 13.5997 28.8253 entry Colt 27.0000 3.8557 165 7.00 &lt;.0001 0.05 19.3872 34.6128 entry Gage 24.5125 3.8557 165 6.36 &lt;.0001 0.05 16.8997 32.1253 entry Homestea 27.6375 3.8557 165 7.17 &lt;.0001 0.05 20.0247 35.2503 entry KS831374 24.1250 3.8557 165 6.26 &lt;.0001 0.05 16.5122 31.7378 entry Lancer 28.5625 3.8557 165 7.41 &lt;.0001 0.05 20.9497 36.1753 entry Lancota 26.5500 3.8557 165 6.89 &lt;.0001 0.05 18.9372 34.1628 entry NE83404 27.3875 3.8557 165 7.10 &lt;.0001 0.05 19.7747 35.0003 entry NE83406 24.2750 3.8557 165 6.30 &lt;.0001 0.05 16.6622 31.8878 entry NE83407 22.6875 3.8557 165 5.88 &lt;.0001 0.05 15.0747 30.3003 entry NE83432 19.7250 3.8557 165 5.12 &lt;.0001 0.05 12.1122 27.3378 entry NE83498 30.1250 3.8557 165 7.81 &lt;.0001 0.05 22.5122 37.7378 entry NE83T12 21.5625 3.8557 165 5.59 &lt;.0001 0.05 13.9497 29.1753 entry NE84557 20.5250 3.8557 165 5.32 &lt;.0001 0.05 12.9122 28.1378 entry NE85556 26.3875 3.8557 165 6.84 &lt;.0001 0.05 18.7747 34.0003 entry NE85623 21.7250 3.8557 165 5.63 &lt;.0001 0.05 14.1122 29.3378 entry NE86482 24.2875 3.8557 165 6.30 &lt;.0001 0.05 16.6747 31.9003 entry NE86501 30.9375 3.8557 165 8.02 &lt;.0001 0.05 23.3247 38.5503 entry NE86503 32.6500 3.8557 165 8.47 &lt;.0001 0.05 25.0372 40.2628 entry NE86507 23.7875 3.8557 165 6.17 &lt;.0001 0.05 16.1747 31.4003 entry NE86509 26.8500 3.8557 165 6.96 &lt;.0001 0.05 19.2372 34.4628 entry NE86527 22.0125 3.8557 165 5.71 &lt;.0001 0.05 14.3997 29.6253 entry NE86582 24.5375 3.8557 165 6.36 &lt;.0001 0.05 16.9247 32.1503 entry NE86606 29.7625 3.8557 165 7.72 &lt;.0001 0.05 22.1497 37.3753 entry NE86607 29.3250 3.8557 165 7.61 &lt;.0001 0.05 21.7122 36.9378 entry NE86T666 21.5375 3.8557 165 5.59 &lt;.0001 0.05 13.9247 29.1503 entry NE87403 25.1250 3.8557 165 6.52 &lt;.0001 0.05 17.5122 32.7378 entry NE87408 26.3000 3.8557 165 6.82 &lt;.0001 0.05 18.6872 33.9128 entry NE87409 21.3750 3.8557 165 5.54 &lt;.0001 0.05 13.7622 28.9878 entry NE87446 27.6750 3.8557 165 7.18 &lt;.0001 0.05 20.0622 35.2878 entry NE87451 24.6125 3.8557 165 6.38 &lt;.0001 0.05 16.9997 32.2253 entry NE87457 23.9125 3.8557 165 6.20 &lt;.0001 0.05 16.2997 31.5253 entry NE87463 25.9125 3.8557 165 6.72 &lt;.0001 0.05 18.2997 33.5253 entry NE87499 20.4125 3.8557 165 5.29 &lt;.0001 0.05 12.7997 28.0253 entry NE87512 23.2500 3.8557 165 6.03 &lt;.0001 0.05 15.6372 30.8628 entry NE87513 26.8125 3.8557 165 6.95 &lt;.0001 0.05 19.1997 34.4253 entry NE87522 25.0000 3.8557 165 6.48 &lt;.0001 0.05 17.3872 32.6128 entry NE87612 21.8000 3.8557 165 5.65 &lt;.0001 0.05 14.1872 29.4128 entry NE87613 29.4000 3.8557 165 7.63 &lt;.0001 0.05 21.7872 37.0128 entry NE87615 25.6875 3.8557 165 6.66 &lt;.0001 0.05 18.0747 33.3003 entry NE87619 31.2625 3.8557 165 8.11 &lt;.0001 0.05 23.6497 38.8753 entry NE87627 23.2250 3.8557 165 6.02 &lt;.0001 0.05 15.6122 30.8378 entry Norkan 24.4125 3.8557 165 6.33 &lt;.0001 0.05 16.7997 32.0253 entry Redland 30.5000 3.8557 165 7.91 &lt;.0001 0.05 22.8872 38.1128 entry Roughrid 21.1875 3.8557 165 5.50 &lt;.0001 0.05 13.5747 28.8003 entry Scout66 27.5250 3.8557 165 7.14 &lt;.0001 0.05 19.9122 35.1378 entry Siouxlan 30.1125 3.8557 165 7.81 &lt;.0001 0.05 22.4997 37.7253 entry TAM107 28.4000 3.8557 165 7.37 &lt;.0001 0.05 20.7872 36.0128 entry TAM200 21.2375 3.8557 165 5.51 &lt;.0001 0.05 13.6247 28.8503 entry Vona 23.6000 3.8557 165 6.12 &lt;.0001 0.05 15.9872 31.2128 The F-statistic and accompanying large p-value for gen indicate no differences between genotypes. This is surprising for a variety trial. The fit statistics (e.g. AIC) are helpful for model comparison. Although On their own, these metrics do not have much meaning. The AIC value for this standard RCBD analysis is 1221.7; lets compare that number to that for the spatially-adjusted models (in the case of AIC, smaller numbers indicate a better fitting model). Another point of comparison he standard error of the means is 3.8557. The next step is to try a spatially-adjusted model. This is done by adding a repeated statement specifying the spatial model form (Gaussian, type=sp(gau)) and the variables related to position in the study (row, col). The local option tells SAS to use a nugget parameter in the Gaussian variogram model. The second additional statement is parms. This gives SAS a starting place for estimating the range, sill, and nugget parameters. The values given here are taken from the PROC VARIOGRAM output above. While this step can be omitted, it is recommended not to do so because, on its own, PROC MIXED can often have trouble narrowing in on reasonable parameter estimates. One reason for the preceding variogram steps is to obtain these parameter values so PROC MIXED has a good starting place for estimation. As before, the estimated means (adjusted now) are saved, this time in data set NIN_Spatial_means. 6.4.2 RCBD Model with Spatial Covariates /** Fit Gaussian adjusted model **/ /** Parms statement order: Range, Sill, Nugget **/ /** Model option &quot;local&quot; forces nugget into model **/ ODS html GPATH = &quot;.\\img\\&quot; ; proc mixed data=alliance maxiter=150; class entry; model yield = entry /ddfm=kr; repeated/subject=intercept type=sp(gau) (Row Col) local; parms (11) (22) (19); lsmeans entry/cl; ods output LSMeans=NIN_Spatial_means; title1 &#39;NIN data: Gaussian Spatial Adjustment&#39;; run; NIN data: Gaussian Spatial Adjustment Model Information Data Set WORK.ALLIANCE Dependent Variable yield Covariance Structure Spatial Gaussian Subject Effect Intercept Estimation Method REML Residual Variance Method Profile Fixed Effects SE Method Kenward-Roger Degrees of Freedom Method Kenward-Roger Class Level Information Class Levels Values entry 56 Arapahoe Brule Buckskin Centura Centurk7 Cheyenne Cody Colt Gage Homestea KS831374 Lancer Lancota NE83404 NE83406 NE83407 NE83432 NE83498 NE83T12 NE84557 NE85556 NE85623 NE86482 NE86501 NE86503 NE86507 NE86509 NE86527 NE86582 NE86606 NE86607 NE86T666 NE87403 NE87408 NE87409 NE87446 NE87451 NE87457 NE87463 NE87499 NE87512 NE87513 NE87522 NE87612 NE87613 NE87615 NE87619 NE87627 Norkan Redland Roughrid Scout66 Siouxlan TAM107 TAM200 Vona Dimensions Covariance Parameters 3 Columns in X 57 Columns in Z 0 Subjects 1 Max Obs per Subject 224 Number of Observations Number of Observations Read 224 Number of Observations Used 224 Number of Observations Not Used 0 Parameter Search CovP1 CovP2 CovP3 Variance Res Log Like -2 Res Log Like 11.0000 22.0000 19.0000 25.3339 -555.0999 1110.1998 Iteration History Iteration Evaluations -2 Res Log Like Criterion 1 2 1098.19938899 0.55691103 2 2 1073.55589724 0.01698755 3 2 1070.40479989 0.00621291 4 1 1067.58247826 0.00103523 5 1 1067.13250829 0.00007623 6 1 1067.10196425 0.00000066 7 1 1067.10171375 0.00000000 Convergence criteria met. Covariance Parameter Estimates Cov Parm Subject Estimate Variance Intercept 43.3874 SP(GAU) Intercept 10.7004 Residual 15.3580 Fit Statistics -2 Res Log Likelihood 1067.1 AIC (Smaller is Better) 1073.1 AICC (Smaller is Better) 1073.2 BIC (Smaller is Better) 1082.5 PARMS Model Likelihood Ratio Test DF Chi-Square Pr &gt; ChiSq 2 43.10 &lt;.0001 Type 3 Tests of Fixed Effects Effect Num DF Den DF F Value Pr &gt; F entry 55 136 1.84 0.0024 Least Squares Means Effect entry Estimate StandardError DF t Value Pr &gt; |t| Alpha Lower Upper entry Arapahoe 27.0657 3.2760 18.5 8.26 &lt;.0001 0.05 20.1964 33.9351 entry Brule 27.0363 3.2912 18.3 8.21 &lt;.0001 0.05 20.1295 33.9430 entry Buckskin 35.6362 3.3341 19.5 10.69 &lt;.0001 0.05 28.6692 42.6032 entry Centura 25.4196 3.2861 17.9 7.74 &lt;.0001 0.05 18.5131 32.3261 entry Centurk7 27.2432 3.2915 18.2 8.28 &lt;.0001 0.05 20.3345 34.1519 entry Cheyenne 25.0592 3.2843 18.3 7.63 &lt;.0001 0.05 18.1660 31.9524 entry Cody 24.0971 3.2733 18.5 7.36 &lt;.0001 0.05 17.2346 30.9596 entry Colt 25.7772 3.3473 18.5 7.70 &lt;.0001 0.05 18.7570 32.7974 entry Gage 25.0110 3.2920 18 7.60 &lt;.0001 0.05 18.0941 31.9279 entry Homestea 22.1425 3.2711 19.1 6.77 &lt;.0001 0.05 15.2994 28.9856 entry KS831374 26.9109 3.2537 18.8 8.27 &lt;.0001 0.05 20.0954 33.7263 entry Lancer 23.6478 3.2891 18.2 7.19 &lt;.0001 0.05 16.7428 30.5528 entry Lancota 21.7590 3.3014 18.5 6.59 &lt;.0001 0.05 14.8367 28.6814 entry NE83404 25.4502 3.2997 18.4 7.71 &lt;.0001 0.05 18.5282 32.3721 entry NE83406 26.5136 3.2808 18.5 8.08 &lt;.0001 0.05 19.6355 33.3918 entry NE83407 26.0105 3.3019 19.7 7.88 &lt;.0001 0.05 19.1168 32.9041 entry NE83432 22.3448 3.2852 18.3 6.80 &lt;.0001 0.05 15.4503 29.2394 entry NE83498 29.7725 3.3042 18.3 9.01 &lt;.0001 0.05 22.8396 36.7055 entry NE83T12 21.9692 3.3222 18.3 6.61 &lt;.0001 0.05 14.9968 28.9416 entry NE84557 21.8553 3.2802 18.4 6.66 &lt;.0001 0.05 14.9758 28.7347 entry NE85556 28.6144 3.2887 18.1 8.70 &lt;.0001 0.05 21.7073 35.5216 entry NE85623 24.2722 3.2740 18.4 7.41 &lt;.0001 0.05 17.4046 31.1398 entry NE86482 24.7351 3.2632 18.7 7.58 &lt;.0001 0.05 17.8977 31.5725 entry NE86501 25.4990 3.2964 18.6 7.74 &lt;.0001 0.05 18.5891 32.4090 entry NE86503 27.8735 3.3194 18.1 8.40 &lt;.0001 0.05 20.9011 34.8459 entry NE86507 27.8365 3.3336 17.9 8.35 &lt;.0001 0.05 20.8308 34.8421 entry NE86509 22.7981 3.3010 18.4 6.91 &lt;.0001 0.05 15.8736 29.7226 entry NE86527 25.4641 3.3056 18 7.70 &lt;.0001 0.05 18.5193 32.4089 entry NE86582 24.0511 3.3056 18 7.28 &lt;.0001 0.05 17.1053 30.9969 entry NE86606 28.0865 3.3221 17.9 8.45 &lt;.0001 0.05 21.1042 35.0688 entry NE86607 26.4158 3.3368 18.2 7.92 &lt;.0001 0.05 19.4105 33.4210 entry NE86T666 17.8942 3.2827 18.1 5.45 &lt;.0001 0.05 10.9996 24.7887 entry NE87403 22.3379 3.2971 19 6.77 &lt;.0001 0.05 15.4380 29.2378 entry NE87408 25.1692 3.3024 18.8 7.62 &lt;.0001 0.05 18.2524 32.0860 entry NE87409 26.8337 3.3081 18.4 8.11 &lt;.0001 0.05 19.8953 33.7722 entry NE87446 22.6374 3.2889 17.9 6.88 &lt;.0001 0.05 15.7249 29.5500 entry NE87451 24.8679 3.3107 18.4 7.51 &lt;.0001 0.05 17.9220 31.8138 entry NE87457 24.1953 3.3139 17.8 7.30 &lt;.0001 0.05 17.2285 31.1622 entry NE87463 24.0642 3.2973 18.1 7.30 &lt;.0001 0.05 17.1393 30.9892 entry NE87499 22.4493 3.2968 17.6 6.81 &lt;.0001 0.05 15.5131 29.3855 entry NE87512 23.2063 3.2933 18.5 7.05 &lt;.0001 0.05 16.3019 30.1108 entry NE87513 22.1161 3.2875 18.1 6.73 &lt;.0001 0.05 15.2123 29.0200 entry NE87522 20.3275 3.2839 18.1 6.19 &lt;.0001 0.05 13.4302 27.2248 entry NE87612 28.9563 3.2808 18.5 8.83 &lt;.0001 0.05 22.0772 35.8354 entry NE87613 28.2664 3.3038 18.2 8.56 &lt;.0001 0.05 21.3296 35.2031 entry NE87615 24.6426 3.2876 18 7.50 &lt;.0001 0.05 17.7343 31.5509 entry NE87619 29.3455 3.2904 18.1 8.92 &lt;.0001 0.05 22.4359 36.2550 entry NE87627 19.7546 3.3239 18.2 5.94 &lt;.0001 0.05 12.7760 26.7333 entry Norkan 23.2929 3.2853 18 7.09 &lt;.0001 0.05 16.3915 30.1942 entry Redland 28.2315 3.2653 18.7 8.65 &lt;.0001 0.05 21.3899 35.0732 entry Roughrid 26.3372 3.3674 18.3 7.82 &lt;.0001 0.05 19.2718 33.4025 entry Scout66 26.6969 3.2851 18.3 8.13 &lt;.0001 0.05 19.8032 33.5906 entry Siouxlan 26.4493 3.3019 18.1 8.01 &lt;.0001 0.05 19.5163 33.3823 entry TAM107 23.1066 3.2840 18.5 7.04 &lt;.0001 0.05 16.2203 29.9930 entry TAM200 19.2002 3.2840 18.1 5.85 &lt;.0001 0.05 12.3046 26.0959 entry Vona 25.6633 3.3045 18.2 7.77 &lt;.0001 0.05 18.7257 32.6009 From this output, we see the AIC value is now 1073.1. This is substantially lower than the AIC=1221.7 from the unadjusted model indicating a better model fit. Additionally, the gen effect in the model now has a low p-value (p=0.0024) giving evidence for differences among genotypes where we did not see them previously. Lastly, the standard errors for the means are now lower than those of the unadjusted model indicating an increased precision in mean estimation. Presence of spatial variability can also bias the mean estimates. In this data, this would result in the means ranking incorrectly relative to one another under the unadjusted model. The steps below combine the saved means from the unadjusted and adjusted data sets so that we can see how the ranking changes. 6.5 Compare Estimated Means data NIN_RCBD_means (drop=tvalue probt alpha estimate stderr lower upper df); set NIN_RCBD_means; RCBD_estimate = estimate; RCBD_stderr = stderr; run; data NIN_Spatial_means (drop=tvalue probt alpha estimate stderr lower upper df); set NIN_Spatial_means; Spatial_estimate = estimate; Spatial_stderr = stderr; run; proc sort data=NIN_RCBD_means; by entry; run; proc sort data=NIN_Spatial_means; by entry; run; data compare; merge NIN_RCBD_means NIN_Spatial_means; by entry; run; proc rank data=compare out=compare descending; var RCBD_estimate Spatial_estimate; ranks RCBD_Rank Spatial_Rank; run; proc sort data=compare; by Spatial_rank; run; proc print data=compare; var entry rcbd_estimate Spatial_estimate rcbd_rank spatial_rank; run; Obs entry RCBD_estimate Spatial_estimate RCBD_Rank Spatial_Rank 1 Buckskin 25.5625 35.6362 28 1 2 NE83498 30.1250 29.7725 6 2 3 NE87619 31.2625 29.3455 2 3 4 NE87612 21.8000 28.9563 45 4 5 NE85556 26.3875 28.6144 23 5 6 NE87613 29.4000 28.2664 10 6 7 Redland 30.5000 28.2315 4 7 8 NE86606 29.7625 28.0865 8 8 9 NE86503 32.6500 27.8735 1 9 10 NE86507 23.7875 27.8365 39 10 11 Centurk7 30.3000 27.2432 5 11 12 Arapahoe 29.4375 27.0657 9 12 13 Brule 26.0750 27.0363 25 13 14 KS831374 24.1250 26.9109 37 14 15 NE87409 21.3750 26.8337 50 15 16 Scout66 27.5250 26.6969 17 16 17 NE83406 24.2750 26.5136 36 17 18 Siouxlan 30.1125 26.4493 7 18 19 NE86607 29.3250 26.4158 11 19 20 Roughrid 21.1875 26.3372 53 20 21 NE83407 22.6875 26.0105 43 21 22 Colt 27.0000 25.7772 19 22 23 Vona 23.6000 25.6633 40 23 24 NE86501 30.9375 25.4990 3 24 25 NE86527 22.0125 25.4641 44 25 26 NE83404 27.3875 25.4502 18 26 27 Centura 21.6500 25.4196 47 27 28 NE87408 26.3000 25.1692 24 28 29 Cheyenne 28.0625 25.0592 14 29 30 Gage 24.5125 25.0110 33 30 31 NE87451 24.6125 24.8679 31 31 32 NE86482 24.2875 24.7351 35 32 33 NE87615 25.6875 24.6426 27 33 34 NE85623 21.7250 24.2722 46 34 35 NE87457 23.9125 24.1953 38 35 36 Cody 21.2125 24.0971 52 36 37 NE87463 25.9125 24.0642 26 37 38 NE86582 24.5375 24.0511 32 38 39 Lancer 28.5625 23.6478 12 39 40 Norkan 24.4125 23.2929 34 40 41 NE87512 23.2500 23.2063 41 41 42 TAM107 28.4000 23.1066 13 42 43 NE86509 26.8500 22.7981 20 43 44 NE87446 27.6750 22.6374 15 44 45 NE87499 20.4125 22.4493 55 45 46 NE83432 19.7250 22.3448 56 46 47 NE87403 25.1250 22.3379 29 47 48 Homestea 27.6375 22.1425 16 48 49 NE87513 26.8125 22.1161 21 49 50 NE83T12 21.5625 21.9692 48 50 51 NE84557 20.5250 21.8553 54 51 52 Lancota 26.5500 21.7590 22 52 53 NE87522 25.0000 20.3275 30 53 54 NE87627 23.2250 19.7546 42 54 55 TAM200 21.2375 19.2002 51 55 56 NE86T666 21.5375 17.8942 49 56 This comparison shows some clear changes in rank. In his discussion of this data, Stroup (Stroup 2013), writes:  Buckskin was a variety known to be a high-yielding benchmark; its mediocre mean yield in the RCB analysis despite being observed in the field outperforming all varieties in the vicinity was one symptom that the RCB analysis was giving nonsense results.  Stroup (2013) This high expectation for Buckskin is realized in the adjusted analysis. Likewise, other varieties, such as NE87612 that ranked near the bottom in the RCB analysis, ranked as number 4 in the adjusted analysis. Of the top 10 varieties identified in the adjusted analysis, only 6 are found in the top 10 of the unadjusted RCB analysis. These changes in rank illustrate why consideration of spatial variability in agricultural trials is important. "],["model-extension.html", "Section 7 Other Models 7.1 Other Experimental Designs 7.2 Traits with non-gaussian distributions", " Section 7 Other Models library(agridat); library(desplot) library(dplyr) library(nlme) library(lme4) Spatial models can easily be extended to fit other experimental designs such as alpha lattice and split plot, and traits with non-Gaussian distribution that are modeled using a generalized linear model. 7.1 Other Experimental Designs 7.1.1 2+ Factorials (RCBD) data(chinloy.fractionalfactorial) 7.1.2 Alpha lattice data(burgueno.alpha) m0 &lt;- lmer(yield ~ gen + (1|rep/block), data=burgueno.alpha) 7.1.3 Latin square Latin is a special example of a lattice experiment where each treatment occurs in each row and in each column. As a result, the row and column effects can be modeled using balanced data. The cochran.latin data set from the package Agridat: data(cochran.latin) head(cochran.latin) ## row col operator diff ## 1 1 1 f 3.5 ## 2 1 2 b 4.2 ## 3 1 3 a 6.7 ## 4 1 4 d 6.6 ## 5 1 5 c 4.1 ## 6 1 6 e 3.8 hist(cochran.latin$diff) desplot(cochran.latin, diff~col*row, text=operator, cex=1, main=&quot;cochran.latin&quot;) cochran.latin &lt;- mutate(cochran.latin, rowf = as.factor(row), colf = as.factor(col)) cochran.latin_lme1 &lt;- lm(diff ~ operator + colf + rowf, data = cochran.latin) 7.1.4 Augmented lind &lt;- read.csv(&quot;data/AB19F5_LIND.csv&quot;) 7.1.5 Split plot #library(agridat): data(durban.splitplot) 7.1.6 Split-split plot data(archbold.apple) #m1 &lt;- lmer(yield ~ -1 + trt + (1|rep/mp/sp), archbold.apple) 7.1.7 Split block also, over-dispersed count data data(beal.webworms) ## Warning in data(beal.webworms): data set &#39;beal.webworms&#39; not found 7.2 Traits with non-gaussian distributions 7.2.1 Count traits: Count traits are discrete rather than continuous and often follow a poisson distribution or in the case of over-dispersed data, a negative binomial distribution. Here is a data set of wireworms counts after a fumigation treatment. data(cochran.wireworms) stem(cochran.wireworms$worms) ## ## The decimal point is 1 digit(s) to the right of the | ## ## 0 | 00112234444444 ## 0 | 5566688899 ## 1 | ## 1 | 7 There are 5 treatment levels, K, M, N, O, and P, and 5 replicates. It is arranged in a latin square experimental design. desplot(cochran.wireworms, worms ~ col*row, text=trt, cex=1, main=&quot;cochran wireworms&quot;) 7.2.2 Percent traits (e.g. percent germination, percent infection, percent survival) bounded between 0 and 100 # having a hard time finding a data set 7.2.3 Ordinal traits (e.g. disease scores) data(lee.potatoblight) 7.2.4 Binomial traits (e.g. ) data(gotway.hessianfly) "],["the-end.html", "Section 8 Conclusion 8.1 Other packages 8.2 Final recommendations", " Section 8 Conclusion 8.1 Other packages There are several other packages for exploring and modeling spatial variability in field trials. package usage Mcspatial nonparametric spatial analysis ngspatial spatial models with a focus on generalised linear models spaMM correlated error modes and generalised linear models sommer mixed models, including an AR1xAr1 model, but it does not estimate \\(/rho\\) parameters spatialreg The package sommer implements a version of the AR1xAR1 covariance structure. However, it does not estimate the parameter \\(\\rho\\). The user must specify the \\(\\rho\\) and that value is not optimized in the restricted maximum likelihood estimation. There may be another way to implement the AR1xAR1 spatial model using the package TMB. Both SAS and Asreml can implement a mixed model with this covariance structure. A spAMM tutorial is available for exploring this package more. 8.2 Final recommendations Spatial analysis is a big topic, but I think it is worth the effort to learn and implement in analysis of field trials. This guide provides some minimal recipes for how to incorporate spatial information into field trial statistical analysis. There is no denying that work is needed to develop scripts that automate this process so researchers can routinely incorporate spatial covariance into field trial analysis. Many current R tools are unwieldy to use and have insufficient options to support variety trial analysis. Until this situation is improved, it is probably wisest to focus on using spatial models that are well-supported at this time. Any of the options implemented in the nlme package (or that work with that package) are decent choices with excellent support for extracting least-squares means, running ANOVA, and standard model diagnostics. Furthermore, nlme supports generalized linear models. Investigating spatial correlation in a field trial and controlling for it if necessary is recommended over doing nothing. sessionInfo() ## R version 4.0.5 (2021-03-31) ## Platform: x86_64-w64-mingw32/x64 (64-bit) ## Running under: Windows 10 x64 (build 19042) ## ## Matrix products: default ## ## locale: ## [1] LC_COLLATE=English_United States.1252 ## [2] LC_CTYPE=English_United States.1252 ## [3] LC_MONETARY=English_United States.1252 ## [4] LC_NUMERIC=C ## [5] LC_TIME=English_United States.1252 ## ## attached base packages: ## [1] stats graphics grDevices datasets utils methods base ## ## other attached packages: ## [1] SASmarkdown_0.4.3 psych_2.1.3 reshape2_1.4.4 SpATS_1.0-12 ## [5] lme4_1.1-26 Matrix_1.3-2 spaMM_3.7.2 emmeans_1.5.5-1 ## [9] gstat_2.0-7 purrr_0.3.4 spdep_1.1-5 sf_0.9-8 ## [13] spData_0.3.8 sp_1.4-5 nlme_3.1-152 desplot_1.8 ## [17] tidyr_1.1.3 dplyr_1.0.5 agridat_1.18 ggplot2_3.3.3 ## ## loaded via a namespace (and not attached): ## [1] TH.data_1.0-10 minqa_1.2.4 colorspace_2.0-0 ## [4] deldir_0.2-10 ellipsis_0.3.1 class_7.3-18 ## [7] estimability_1.3 proxy_0.4-25 farver_2.1.0 ## [10] fansi_0.4.2 mvtnorm_1.1-1 codetools_0.2-18 ## [13] splines_4.0.5 mnormt_2.0.2 knitr_1.31 ## [16] spam_2.6-0 jsonlite_1.7.2 nloptr_1.2.2.2 ## [19] pbkrtest_0.5.1 broom_0.7.5 compiler_4.0.5 ## [22] backports_1.2.1 assertthat_0.2.1 cli_2.3.1 ## [25] htmltools_0.5.1.1 tools_4.0.5 dotCall64_1.0-1 ## [28] coda_0.19-4 gtable_0.3.0 glue_1.4.2 ## [31] gmodels_2.18.1 Rcpp_1.0.7 slam_0.1-48 ## [34] jquerylib_0.1.3 raster_3.4-5 vctrs_0.3.7 ## [37] gdata_2.18.0 xfun_0.22 stringr_1.4.0 ## [40] lifecycle_1.0.0 renv_0.13.2 gtools_3.8.2 ## [43] statmod_1.4.35 ROI_1.0-0 LearnBayes_2.15.1 ## [46] MASS_7.3-53.1 zoo_1.8-9 scales_1.1.1 ## [49] parallel_4.0.5 sandwich_3.0-0 expm_0.999-6 ## [52] yaml_2.2.1 pbapply_1.4-3 sass_0.3.1 ## [55] stringi_1.5.3 highr_0.8 e1071_1.7-6 ## [58] boot_1.3-27 intervals_0.15.2 rlang_0.4.10 ## [61] pkgconfig_2.0.3 evaluate_0.14 lattice_0.20-41 ## [64] labeling_0.4.2 tidyselect_1.1.0 plyr_1.8.6 ## [67] magrittr_2.0.1 bookdown_0.21 R6_2.5.0 ## [70] generics_0.1.0 multcomp_1.4-16 DBI_1.1.1 ## [73] pillar_1.5.1 withr_2.4.1 units_0.7-1 ## [76] xts_0.12.1 survival_3.2-10 tibble_3.1.0 ## [79] spacetime_1.2-4 crayon_1.4.1 KernSmooth_2.23-18 ## [82] utf8_1.2.1 tmvnsim_1.0-2 rmarkdown_2.7 ## [85] grid_4.0.5 data.table_1.14.0 FNN_1.1.3 ## [88] digest_0.6.27 classInt_0.4-3 xtable_1.8-4 ## [91] numDeriv_2016.8-1.1 munsell_0.5.0 registry_0.5-1 ## [94] bslib_0.2.4 Stroup, Walter W. 2013. Generalized Linear Mixed Models: Modern Concepts, Methods and Applications. Boca Raton, FL: Chapman &amp; Hall/CRC Press. Stroup, Walter W., Stephen B. Baenziger, and Dieter K. Mulitze. 1994. Removing Spatial Variation from Wheat Yield Trials: A Comparison of Methods. Crop Science 34: 6266. "]]
