

library(readr); library(dplyr); library(tidyr)
library(ggplot2); library(beyonce); library(desplot)

mydata <- read.csv("Data/all_SIdaho_trial_data.csv")
mydata$block <- as.factor(mydata$rep)

irrig <- mydata %>% filter(irrigation == "irrigated")
dryland <-  mydata %>% filter(irrigation == "dryland")



#testing on just one environment
irrig.yield <- irrig %>% filter(environment == "RT_2005") %>%
  select(range, row, yield, name, block)

# teeny bit of exploratin with geoR
# irrig.yield.geo <- as.geodata(irrig.yield)
# plot(irrig.yield.geo)


# loads of code to make data into a matrix - not needed
# need an actual solution for missing data 
# irrig.yield.matrix <- matrix(c(irrig.yield$yield, NA), ncol = 5, byrow = T)
# rownames(irrig.yield.matrix) <- paste0("range",1:max(irrig.yield$range))
# colnames(irrig.yield.matrix) <- paste0("row",1:max(irrig.yield$row))
# 
# irrig.names.matrix <- matrix(c(irrig.yield$name, NA), ncol = 5, byrow = T)
# rownames(irrig.names.matrix) <- paste0("range",1:max(irrig.yield$range))
# colnames(irrig.names.matrix) <- paste0("row",1:max(irrig.yield$row))

max.row0 = max(irrig.yield$row)
max.range0 = max(irrig.yield$range)

# yield heat map
ggplot(irrig.yield, aes(range, row)) +
  geom_tile(aes(fill = yield), col = "white") +
  geom_text(aes(label = name)) +
  #geom_tileborder(aes(group = 1, grp = block), lwd = 1.2) +
  scale_fill_gradient(low = "white", high = "blue") +
  ggtitle("yield plot of irrigated trial Rupert 2005") +
  scale_x_continuous(breaks = seq(1,max.range0, 1)) +
  scale_y_continuous(breaks = 1:max.row0) +
  theme_classic() +
  theme(axis.text = element_text(size = 16),
        axis.title = element_text(size = 18),
        legend.title = element_text(size = 16),
        legend.text = element_text(size = 15))

# blocking plot
ggplot(irrig.yield, aes(range, row)) +
  geom_tile(aes(fill = block), color = "white") + 
  ggtitle("RCBD layout for trial Rupert 2005") +
  scale_x_continuous(breaks = seq(1,max.range0, 1)) +
  scale_y_continuous(breaks = 1:max.row0) +
  scale_fill_manual(values = beyonce_palette(18)) +
  theme_classic() +
  theme(axis.text = element_text(size = 16),
        axis.title = element_text(size = 18),
        legend.title = element_text(size = 16),
        legend.text = element_text(size = 15))


# loop for all sites

heatmap_func <- function(dat = mydata, env) {
  
  dat2 <- filter(dat, environment == !!env) 
  irrigt = unique(dat2$irrigation)
  max.row = max(dat2[["row"]])
  max.range = max(dat2[["range"]])
  
  dat2 %>% 
    ggplot(aes(range, row)) +
    geom_tile(aes(fill = yield)) +
    geom_text(aes(label = name)) +
    #rtgeom_tileborder(aes(group = 1, grp = block), lwd = 1) +
    scale_fill_gradient(low = "white", high = "blue") +
    ggtitle(paste0("yield plot of ", irrigt, " trial ", env)) +
    scale_x_continuous(breaks = seq(1,max.range, 1)) +
    scale_y_continuous(breaks = 1:max.row) +
    theme_classic() +
      theme(axis.text = element_text(size = 16),
            axis.title = element_text(size = 18),
            legend.title = element_text(size = 16),
            legend.text = element_text(size = 15))
    
    ggsave(paste0("Plots/raw_spatial_yield_plot_",env,"_",irrigt,".png"), width = 14, height = 8)
}

# testing
# whoa, it worked the first time!!
heatmap_func(dat = mydata, env = "RT_2005")

# loop!
i_env_list <- as.list(unique(as.character(irrig$environment)))
lapply(i_env_list, function(x) heatmap_func(env = x))

#### different function for dryland stuff 

heatmap_func2 <- function(dat = mydata, env) {
  
  dat2 <- filter(dat, environment == !!env) 
  irrigt = unique(dat2$irrigation)
  max.row = max(dat2[["row"]])
  max.range = max(dat2[["range"]])
  
  dat2 %>% 
    ggplot(aes(range, row)) +
    geom_tile(aes(fill = yield)) +
    geom_text(aes(label = name)) +
    #geom_tileborder(aes(group = 1, grp = block), lwd = 1) +
    scale_fill_gradient(low = "snow", high = "violetred4") +
    ggtitle(paste0("yield plot of ", irrigt, " trial ", env)) +
    theme_minimal() +
    scale_x_continuous(breaks = seq(1,max.range, 1)) +
    scale_y_continuous(breaks = 1:max.row) +
    theme_classic() +
    theme(axis.text = element_text(size = 16),
          axis.title = element_text(size = 18),
          legend.title = element_text(size = 16),
          legend.text = element_text(size = 15))
  
  ggsave(paste0("Plots/raw_spatial_yield_plot_",env,"_",irrigt,".png"), width = 14, height = 8)
}

# testing
#heatmap_func2(dryland, "RT_2005","dryland")

d_env_list <- as.list(unique(as.character(dryland$environment)))
lapply(d_env_list, function(x) heatmap_func2(env = x))

# some summary data:

cv_summary -> mydata %>% group_by(irrigation, year, loc) %>% summarise(total = length(unique(name)))
summary.table <- mydata %>% group_by(irrigation, year, loc) %>% dcast(year ~ loc + irrigation, value.var = "yield")
cv_year <- mydata %>% select(loc, year, name, irrigation) %>%  distinct()

  
# test with lodging control

# not sure this is needed - data looks like it was already adjusted for lodging. 
# yellow/turquoise not as impactful as white/blue

mydata2 <- mutate(mydata, Lodge = case_when(
  is.na(lodging) ~ 0,
  TRUE ~ lodging/100)) %>% 
    mutate(Yield = case_when(
        Lodge > 0.5 ~ NA_real_,
        Lodge == 0 ~ yield,
        TRUE ~ yield/(1 - Lodge))) 

# look at extent of zero data
mydata2 %>% group_by(environment) %>% filter(is.na(Yield), .preserve = T) %>% summarise(count = n()) -> zero_counts

heatmap_func3 <- function(dat = mydata2, env) {
  
  dat2 <- filter(dat, environment == !!env) 
  
  irrigt = unique(dat2$irrigation)
  max.row = max(dat2[["row"]])
  max.range = max(dat2[["range"]])
  
  dat2 %>%
    ggplot(aes(range, row)) +
    geom_tile(aes(fill = Yield), col = "white") +
    geom_text(aes(label = name)) +
    #geom_tileborder(aes(group = 1, grp = block), lwd = 1) +
    scale_fill_gradient(low = "yellow", high = "darkturquoise") +
    ggtitle(paste0("yield plot of ", irrigt, " trial ", env)) +
    theme_minimal() +
    scale_x_continuous(breaks = seq(2,max.range, 2)) +
    scale_y_continuous(breaks = 1:max.row) +
    theme_classic() +
    theme(axis.text = element_text(size = 16),
          axis.title = element_text(size = 18),
          legend.title = element_text(size = 16),
          legend.text = element_text(size = 15))

  ggsave(paste0("Plots/lodging_adj_yield_plot_",env,"_",irrigt,".png"), 
      height = 8, width = 14)
} 

heatmap_func3(env = "RT_2005")

# loop!
env_list <- as.list(unique(as.character(mydata2$environment)))
lapply(env_list, function(x) heatmap_func3(env = x))


### blocking plots

heatmap_func3 <- function(dat = mydata2, env) {
  
  dat2 <- filter(dat, environment == !!env) 
  
  irrigt = unique(dat2$irrigation)
  max.row = max(dat2[["row"]])
  max.range = max(dat2[["range"]])
  
  dat2 %>%
    ggplot(aes(range, row)) +
    geom_tile(aes(fill = Yield), col = "white") +
    geom_text(aes(label = name)) +
    #geom_tileborder(aes(group = 1, grp = block), lwd = 1) +
    scale_fill_gradient(low = "yellow", high = "darkturquoise") +
    ggtitle(paste0("yield plot of ", irrigt, " trial ", env)) +
    theme_minimal() +
    scale_x_continuous(breaks = seq(2,max.range, 2)) +
    scale_y_continuous(breaks = 1:max.row) +
    theme_classic() +
    theme(axis.text = element_text(size = 16),
          axis.title = element_text(size = 18),
          legend.title = element_text(size = 16),
          legend.text = element_text(size = 15))
  
  ggsave(paste0("Plots/lodging_adj_yield_plot_",env,"_",irrigt,".png"), 
         height = 8, width = 14)
} 

heatmap_func3(env = "RT_2005")

# loop!
env_list <- as.list(unique(as.character(mydata2$environment)))
lapply(env_list, function(x) heatmap_func3(env = x))


## blocking plot
heatmap_func4<- function(dat = mydata, env) {
  
  dat2 <- filter(dat, environment == !!env) 
  
  irrigt = unique(dat2$irrigation)
  max.row = max(dat2[["row"]])
  max.range = max(dat2[["range"]])
  
  dat2 %>%
    ggplot(aes(range, row)) +
    geom_tile(aes(fill = block), col = "white") +
    geom_tileborder(aes(group = 1, grp = block), lwd = 1) +
    scale_fill_manual(values = beyonce_palette(18)) +
    ggtitle(paste0("yield plot of ", irrigt, " trial ", env)) +
    theme_minimal() +
    scale_x_continuous(breaks = seq(2,max.range, 2)) +
    scale_y_continuous(breaks = 1:max.row) +
    theme_classic() +
    theme(axis.text = element_text(size = 16),
          axis.title = element_text(size = 18),
          legend.title = element_text(size = 16),
          legend.text = element_text(size = 15))
  
  ggsave(paste0("Plots/blocking_plot_",env,"_",irrigt,".png"), 
         height = 8, width = 14)
} 

# heatmap_func3(env = "RT_2005")

# loop!

# env_list <- as.list(unique(as.character(mydata2$environment)))
lapply(env_list, function(x) heatmap_func4(env = x))

  
  