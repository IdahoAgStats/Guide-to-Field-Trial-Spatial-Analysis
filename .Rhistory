install.packages('tinytex')
tinytex::install_tinytex()
library(ggplot2)
na <- rep(NA, 4)
o <- "Observation of interest"
n <- "Neighbor"
sp.config <- data.frame(row = rep(1:4, 4),
column = rep(1:4, each = 4),
rook = c(na,
NA, NA, n, NA, NA,
NA, n, o, n, NA,
NA, NA, n, NA, NA,
na),
queen = c(na,
NA, n, n, n, NA,
NA, n, o, n, NA,
NA, n, n, n, NA,
na))
library(ggplot2)
na <- rep(NA, 5)
o <- "Observation of interest"
n <- "Neighbor"
sp.config <- data.frame(row = rep(1:5, 5),
column = rep(1:5, each = 5),
rook = c(na,
NA, NA, n, NA, NA,
NA, n, o, n, NA,
NA, NA, n, NA, NA,
na),
queen = c(na,
NA, n, n, n, NA,
NA, n, o, n, NA,
NA, n, n, n, NA,
na))
ggplot(sp.config, aes(x = row, y = column)) +
geom_tile(aes(fill = rook))
theme_classic()
library(ggplot2)
na <- rep(NA, 5)
o <- "Observation of interest"
n <- "Neighbor"
sp.config <- data.frame(row = rep(1:5, 5),
column = rep(1:5, each = 5),
rook = c(na,
NA, NA, n, NA, NA,
NA, n, o, n, NA,
NA, NA, n, NA, NA,
na),
queen = c(na,
NA, n, n, n, NA,
NA, n, o, n, NA,
NA, n, n, n, NA,
na))
ggplot(sp.config, aes(x = row, y = column)) +
geom_tile(aes(fill = rook)) +
theme_classic()
ggplot(sp.config, aes(x = row, y = column)) +
geom_tile(aes(fill = queen), col = "black", fill = "white") +
theme_classic()
library(ggplot2)
na <- rep(NA, 5)
o <- "Observation of interest"
n <- "Neighbor"
sp.config <- data.frame(row = rep(1:5, 5),
column = rep(1:5, each = 5),
rook = c(na,
NA, NA, n, NA, NA,
NA, n, o, n, NA,
NA, NA, n, NA, NA,
na),
queen = c(na,
NA, n, n, n, NA,
NA, n, o, n, NA,
NA, n, n, n, NA,
na))
ggplot(sp.config, aes(x = row, y = column)) +
geom_tile(aes(fill = rook)) +
theme_classic()
ggplot(sp.config, aes(x = row, y = column)) +
geom_tile(aes(fill = queen), col = "black") +
scale_colour_manual(values = c("yellow", "red", "white")) +
theme_void()
library(ggplot2)
na <- rep(NA, 5)
o <- "Observation of interest"
n <- "Neighbor"
sp.config <- data.frame(row = rep(1:5, 5),
column = rep(1:5, each = 5),
rook = c(na,
NA, NA, n, NA, NA,
NA, n, o, n, NA,
NA, NA, n, NA, NA,
na),
queen = c(na,
NA, n, n, n, NA,
NA, n, o, n, NA,
NA, n, n, n, NA,
na))
ggplot(sp.config, aes(x = row, y = column)) +
geom_tile(aes(fill = rook)) +
theme_classic()
ggplot(sp.config, aes(x = row, y = column)) +
geom_tile(aes(fill = queen), col = "black") +
scale_fill_manual(values = c("yellow", "red", "white")) +
theme_void()
library(ggplot2)
na <- rep(NA, 5)
o <- "Observation of interest"
n <- "Neighbor"
sp.config <- data.frame(row = rep(1:5, 5),
column = rep(1:5, each = 5),
rook = c(na,
NA, NA, n, NA, NA,
NA, n, o, n, NA,
NA, NA, n, NA, NA,
na),
queen = c(na,
NA, n, n, n, NA,
NA, n, o, n, NA,
NA, n, n, n, NA,
na))
ggplot(sp.config, aes(x = row, y = column)) +
geom_tile(aes(fill = rook)) +
scale_fill_manual(values = c("yellow", "red", "white")) +
guides(fill = F) +
theme_void()
ggplot(sp.config, aes(x = row, y = column)) +
geom_tile(aes(fill = queen), col = "black") +
scale_fill_manual(values = c("yellow", "red", "white")) +
guides(fill = F) +
theme_void()
library(ggplot2)
na <- "Not adjacent"
o <- "Observation of interest"
n <- "Adjacent neighbor"
sp.config <- data.frame(row = rep(1:5, 5),
column = rep(1:5, each = 5),
rook = c(rep(na, 5),
na, na, n, na, na,
na, n, o, n, na,
na, na, n, na, na,
rep(na, 5)),
queen = c(rep(na, 5),
na, n, n, n, na,
na, n, o, n, na,
na, n, n, n, na,
rep(na, 5)))
ggplot(sp.config, aes(x = row, y = column)) +
geom_tile(aes(fill = rook), col = "balck") +
scale_fill_manual(values = c("yellow", "red", "white")) +
guides(fill = F) +
theme_void()
library(ggplot2)
na <- "Not adjacent"
o <- "Observation of interest"
n <- "Adjacent neighbor"
sp.config <- data.frame(row = rep(1:5, 5),
column = rep(1:5, each = 5),
rook = c(rep(na, 5),
na, na, n, na, na,
na, n, o, n, na,
na, na, n, na, na,
rep(na, 5)),
queen = c(rep(na, 5),
na, n, n, n, na,
na, n, o, n, na,
na, n, n, n, na,
rep(na, 5)))
ggplot(sp.config, aes(x = row, y = column)) +
geom_tile(aes(fill = rook), col = "black") +
scale_fill_manual(values = c("yellow", "red", "white")) +
guides(fill = F) +
theme_void()
ggplot(sp.config, aes(x = row, y = column)) +
geom_tile(aes(fill = queen), col = "black") +
scale_fill_manual(values = c("yellow", "red", "white")) +
guides(fill = F) +
theme_void()
library(ggplot2)
na <- "Not adjacent"
o <- "Observation of interest"
n <- "Adjacent neighbor"
sp.config <- data.frame(row = rep(1:5, 5),
column = rep(1:5, each = 5),
rook = c(rep(na, 5),
na, na, n, na, na,
na, n, o, n, na,
na, na, n, na, na,
rep(na, 5)),
queen = c(rep(na, 5),
na, n, n, n, na,
na, n, o, n, na,
na, n, n, n, na,
rep(na, 5)))
ggplot(sp.config, aes(x = row, y = column)) +
geom_tile(aes(fill = rook), col = "black") +
scale_fill_manual(values = c("yellow", "white", "red")) +
guides(fill = F) +
theme_void()
ggplot(sp.config, aes(x = row, y = column)) +
geom_tile(aes(fill = queen), col = "black") +
scale_fill_manual(values = c("yellow", "white", "red")) +
guides(fill = F) +
theme_void()
library(ggplot2)
na <- "Not adjacent"
o <- "Observation of interest"
n <- "Adjacent neighbor"
sp.config <- data.frame(row = rep(1:5, 5),
column = rep(1:5, each = 5),
rook = c(rep(na, 5),
na, na, n, na, na,
na, n, o, n, na,
na, na, n, na, na,
rep(na, 5)),
queen = c(rep(na, 5),
na, n, n, n, na,
na, n, o, n, na,
na, n, n, n, na,
rep(na, 5)))
ggplot(sp.config, aes(x = row, y = column)) +
geom_tile(aes(fill = rook), col = "black") +
scale_fill_manual(values = c("yellow", "white", "red")) +
guides(fill = F) +
theme_void() +
ggtitle("Rook")
ggplot(sp.config, aes(x = row, y = column)) +
geom_tile(aes(fill = queen), col = "black") +
scale_fill_manual(values = c("yellow", "white", "red")) +
theme_void() +
ggtitle("Queen")
library(agridat)
data(nin)
data(package = "agridat")
library(agridat)
data("stroup.nin")
library(agridat)
data("stroup.nin")
head(stroup.nin)
range(stroup.nin$col)
range(stroup.nin$row)
library(agridat)
data("stroup.nin")
library(dplyr); library(tidyr)
Nin <- stroup.nin %>% mutate(col.width = col * 1.2, row.length = row * 4.3) %>%
drop_na()
head(stroup.nin)
head(Nin)
library(agridat)
library(dplyr); library(tidyr)
data("stroup.nin")
Nin <- stroup.nin %>% mutate(col.width = col * 1.2, row.length = row * 4.3) %>%
drop_na()
head(Nin)
head(Nin)
str(Nin)
library(agridat)
library(dplyr); library(tidyr)
data("stroup.nin")
Nin <- stroup.nin %>% mutate(col.width = col * 1.2, row.length = row * 4.3) %>%
arrange(row)
library(agridat)
library(dplyr); library(tidyr)
data("stroup.nin")
Nin <- stroup.nin %>% mutate(col.width = col * 1.2, row.length = row * 4.3) %>%
arrange(row, col)
str(Nin)
head(Nin)
apply(Nin, 2, function(x) sum(is.na(x)))
boxplot(yield ~ rep, data = Nin)
boxplot(yield ~ row, data = Nin)
boxplot(yield ~ col, data = Nin)
boxplot(yield ~ rep, data = Nin, col = "red2", main = "yield across blocks")
boxplot(yield ~ row, data = Nin, col = "dodgerblue2", main = "yield across rows")
boxplot(yield ~ col, data = Nin, col = "gold", main = "yield across columns")
ggplot(Nin, aes(range, row)) +
geom_tile(aes(fill = yield), col = "white") +
geom_text(aes(label = name)) +
#geom_tileborder(aes(group = 1, grp = block), lwd = 1.2) +
scale_fill_gradient(low = "white", high = "blue") +
#ggtitle("yield plot of irrigated trial Rupert 2005") +
scale_x_continuous(breaks = seq(1,max(Nin$range), 1)) +
scale_y_continuous(breaks = 1:max(Nin$row)) +
theme_classic() +
theme(axis.text = element_text(size = 16),
axis.title = element_text(size = 18),
legend.title = element_text(size = 16),
legend.text = element_text(size = 15))
ggplot(Nin, aes(range, row)) +
geom_tile(aes(fill = yield), col = "white") +
geom_text(aes(label = name)) +
#geom_tileborder(aes(group = 1, grp = block), lwd = 1.2) +
scale_fill_gradient(low = "white", high = "blue") +
#ggtitle("yield plot of irrigated trial Rupert 2005") +
scale_x_continuous(breaks = seq(1,max(Nin$col), 1)) +
scale_y_continuous(breaks = 1:max(Nin$row)) +
theme_classic() +
theme(axis.text = element_text(size = 16),
axis.title = element_text(size = 18),
legend.title = element_text(size = 16),
legend.text = element_text(size = 15))
ggplot(Nin, aes(row, col)) +
geom_tile(aes(fill = yield), col = "white") +
geom_text(aes(label = name)) +
#geom_tileborder(aes(group = 1, grp = block), lwd = 1.2) +
scale_fill_gradient(low = "white", high = "blue") +
#ggtitle("yield plot of irrigated trial Rupert 2005") +
scale_x_continuous(breaks = seq(1,max(Nin$row), 1)) +
scale_y_continuous(breaks = 1:max(Nin$col)) +
theme_classic() +
theme(axis.text = element_text(size = 16),
axis.title = element_text(size = 18),
legend.title = element_text(size = 16),
legend.text = element_text(size = 15))
ggplot(Nin, aes(row, col)) +
geom_tile(aes(fill = yield), col = "white") +
geom_text(aes(label = gen)) +
#geom_tileborder(aes(group = 1, grp = block), lwd = 1.2) +
scale_fill_gradient(low = "white", high = "blue") +
#ggtitle("yield plot of irrigated trial Rupert 2005") +
scale_x_continuous(breaks = seq(1,max(Nin$row), 1)) +
scale_y_continuous(breaks = 1:max(Nin$col)) +
theme_classic() +
theme(axis.text = element_text(size = 16),
axis.title = element_text(size = 18),
legend.title = element_text(size = 16),
legend.text = element_text(size = 15))
View(Nin)
table(Nin$rep)
Nin <- stroup.nin %>% mutate(col.width = col * 1.2, row.length = row * 4.3) %%
mutate(name = case_when(is.na(rep) ~ NA_character_, TRUE ~ gen)) %>%
arrange(row, col)
Nin <- stroup.nin %>% mutate(col.width = col * 1.2, row.length = row * 4.3) %%
mutate(name = case_when(is_na(rep) ~ NA_character_, TRUE ~ gen)) %>%
arrange(row, col)
Nin <- stroup.nin %>% mutate(col.width = col * 1.2, row.length = row * 4.3) %>%
mutate(name = case_when(is.na(rep) ~ NA_character_, TRUE ~ gen)) %>%
arrange(row, col)
Nin <- stroup.nin %>% mutate(col.width = col * 1.2, row.length = row * 4.3)
Nin <- stroup.nin %>% mutate(col.width = col * 1.2, row.length = row * 4.3) %>%
mutate(name = case_when(is.na(rep) ~ NA_character_, TRUE ~ gen))
Nin <- stroup.nin %>% mutate(col.width = col * 1.2, row.length = row * 4.3) %>%
mutate(name = case_when(is.na(as.character(rep)) ~ NA_character_, TRUE ~ gen)) %>%
arrange(row, col)
Nin <- stroup.nin %>% mutate(col.width = col * 1.2, row.length = row * 4.3) %>%
mutate(name = case_when(is.na(as.character(rep)) ~ NA_character_, TRUE ~ as.character(gen))) %>%
arrange(row, col)
library(ggplot2); library(desplot)
ggplot(Nin, aes(row, col)) +
geom_tile(aes(fill = yield), col = "white") +
geom_text(aes(label = gen)) +
#geom_tileborder(aes(group = 1, grp = block), lwd = 1.2) +
scale_fill_gradient(low = "white", high = "blue") +
#ggtitle("yield plot of irrigated trial Rupert 2005") +
scale_x_continuous(breaks = seq(1,max(Nin$row), 1)) +
scale_y_continuous(breaks = 1:max(Nin$col)) +
theme_classic() +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14),
legend.title = element_text(size = 12),
legend.text = element_text(size = 12))
library(ggplot2); library(desplot)
ggplot(Nin, aes(row, col)) +
geom_tile(aes(fill = yield), col = "white") +
geom_text(aes(label = gen)) +
#geom_tileborder(aes(group = 1, grp = block), lwd = 1.2) +
scale_fill_gradient(low = "white", high = "blue") +
#ggtitle("yield plot of irrigated trial Rupert 2005") +
scale_x_continuous(breaks = seq(1,max(Nin$row), 1)) +
scale_y_continuous(breaks = 1:max(Nin$col)) +
labs(xlab = "row", ylab = "column", title = "field plot layout") +
theme_classic() +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14),
legend.title = element_text(size = 14),
legend.text = element_text(size = 12))
library(ggplot2); library(desplot)
layout.gg <- ggplot(Nin, aes(x = row, y = col)) +
geom_tile(aes(fill = yield), col = "white") +
geom_text(aes(label = gen)) +
geom_tileborder(aes(group = 1, grp = block), lwd = 1.2) +
scale_fill_gradient(low = "white", high = "blue") +
scale_x_continuous(breaks = seq(1,max(Nin$row), 1)) +
scale_y_continuous(breaks = 1:max(Nin$col)) +
labs(x = "row", y = "column", title = "field plot layout") +
theme_classic() +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14),
legend.title = element_text(size = 14),
legend.text = element_text(size = 12))
install.packages("desplot")
install.packages("desplot")
library(desplot)
layout.gg <- ggplot(Nin, aes(x = row, y = col)) +
geom_tile(aes(fill = yield), col = "white") +
geom_text(aes(label = gen)) +
geom_tileborder(aes(group = 1, grp = block), lwd = 1.2) +
scale_fill_gradient(low = "white", high = "blue") +
scale_x_continuous(breaks = seq(1,max(Nin$row), 1)) +
scale_y_continuous(breaks = 1:max(Nin$col)) +
labs(x = "row", y = "column", title = "field plot layout") +
theme_classic() +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14),
legend.title = element_text(size = 14),
legend.text = element_text(size = 12))
library(ggplot2); library(desplot)
layout.gg <- ggplot(Nin, aes(x = row, y = col)) +
geom_tile(aes(fill = yield), col = "white") +
geom_text(aes(label = gen)) +
geom_tileborder(aes(group = 1, grp = block), lwd = 1.2) +
scale_fill_gradient(low = "white", high = "blue") +
scale_x_continuous(breaks = seq(1,max(Nin$row), 1)) +
scale_y_continuous(breaks = 1:max(Nin$col)) +
labs(x = "row", y = "column", title = "field plot layout") +
theme_classic() +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14),
legend.title = element_text(size = 14),
legend.text = element_text(size = 12))
layout.gg
layout.gg <- ggplot(Nin, aes(x = row, y = col)) +
geom_tile(aes(fill = yield), col = "white") +
geom_text(aes(label = gen)) +
geom_tileborder(aes(group = 1, grp = rep), lwd = 1.2) +
scale_fill_gradient(low = "white", high = "blue") +
scale_x_continuous(breaks = seq(1,max(Nin$row), 1)) +
scale_y_continuous(breaks = 1:max(Nin$col)) +
labs(x = "row", y = "column", title = "field plot layout") +
theme_classic() +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14),
legend.title = element_text(size = 14),
legend.text = element_text(size = 12))
layout.gg
install.packages("rayshader")
library(rayshader)
plot_gg(layout.gg, multicore = F, width = 6, height = 5.5, scale = 300,
background = "#afceff",shadowcolor = "#3a4f70")
layout.gg <- ggplot(Nin, aes(x = row, y = col)) +
geom_tile(aes(fill = yield), col = "white")
plot_gg(layout.gg, multicore = F, width = 6, height = 5.5, scale = 300,
background = "almond",shadowcolor = "#3a4f70")
library(lattice)
wireframe(yield ~ row*col, data = Nin)
library(lattice)
wireframe(yield ~ row*col, col.regions=terrain.colors(20), data = Nin)
library(rayshader)
options(cores = 3)
layout.gg <- ggplot(Nin, aes(x = row, y = col)) +
geom_tile(aes(fill = yield), col = "blacok")
plot_gg(layout.gg, multicore = T, width = 6, height = 8, scale = 200,
background = "white",shadowcolor = "#3a4f70")
layout.gg <- ggplot(Nin, aes(x = row, y = col)) +
geom_tile(aes(fill = yield), col = "black")
plot_gg(layout.gg, multicore = T, width = 6, height = 8, scale = 200,
background = "white",shadowcolor = "#3a4f70")
